2024-04-30 19:06:08 [INFO] [task_scheduler.cc:160] Initializing Task #25: "fused_nn_conv2d_add_add_nn_relu_8"
2024-04-30 19:06:08 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), p1: T.Buffer((T.int64(1), T.int64(1), T.int64(2048), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(512)), "float32"), p3: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(512)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(512)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        pad_temp = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)))
        conv2d_nhwc = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(512)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(512)))
        T_add_1 = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(512)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2048)):
            with T.block("pad_temp"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2, v_i3])
                T.writes(pad_temp[v_i0, v_i1, v_i2, v_i3])
                pad_temp[v_i0, v_i1, v_i2, v_i3] = p0[v_i0, v_i1, v_i2, v_i3]
        for nn, yy, xx, ff, ry, rx, rc in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(512), T.int64(1), T.int64(1), T.int64(2048)):
            with T.block("conv2d_nhwc"):
                v_nn, v_yy, v_xx, v_ff, v_ry, v_rx, v_rc = T.axis.remap("SSSSRRR", [nn, yy, xx, ff, ry, rx, rc])
                T.reads(pad_temp[v_nn, v_yy + v_ry, v_xx + v_rx, v_rc], p1[v_ry, v_rx, v_rc, v_ff])
                T.writes(conv2d_nhwc[v_nn, v_yy, v_xx, v_ff])
                with T.init():
                    conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = T.float32(0)
                conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] + pad_temp[v_nn, v_yy + v_ry, v_xx + v_rx, v_rc] * p1[v_ry, v_rx, v_rc, v_ff]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(512)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, v_ax2, v_ax3]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(512)):
            with T.block("T_add_1"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3], p3[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_add_1[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add_1[v_ax0, v_ax1, v_ax2, v_ax3] = T_add[v_ax0, v_ax1, v_ax2, v_ax3] + p3[v_ax0, v_ax1, v_ax2, v_ax3]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(512)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add_1[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add_1[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-04-30 19:06:08 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-30 19:06:08 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), p1: T.Buffer((T.int64(1), T.int64(1), T.int64(2048), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(512)), "float32"), p3: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(512)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(512)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 96, "meta_schedule.unroll_explicit": 64, "meta_schedule.vectorize": 64})
            conv2d_nhwc = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(512)))
            for nn_0, yy_0, xx_0, ff_0, nn_1, yy_1, xx_1, ff_1, ry_0, rx_0, rc_0, nn_2, yy_2, xx_2, ff_2, ry_1, rx_1, rc_1, nn_3, yy_3, xx_3, ff_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(2048), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(8)):
                with T.block("conv2d_nhwc"):
                    v_nn = T.axis.spatial(T.int64(1), nn_0 + nn_1 + nn_2 + nn_3)
                    v_yy = T.axis.spatial(T.int64(1), yy_0 + yy_1 + yy_2 + yy_3)
                    v_xx = T.axis.spatial(T.int64(1), xx_0 + xx_1 + xx_2 + xx_3)
                    v_ff = T.axis.spatial(T.int64(512), ff_0 * T.int64(512) + ff_1 * T.int64(16) + ff_2 * T.int64(8) + ff_3)
                    v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1)
                    v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1)
                    v_rc = T.axis.reduce(T.int64(2048), rc_0 + rc_1)
                    T.reads(p0[v_nn, v_yy + v_ry, v_xx + v_rx, v_rc], p1[v_ry, v_rx, v_rc, v_ff])
                    T.writes(conv2d_nhwc[v_nn, v_yy, v_xx, v_ff])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = T.float32(0)
                    conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] + p0[v_nn, v_yy + v_ry, v_xx + v_rx, v_rc] * p1[v_ry, v_rx, v_rc, v_ff]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(512)):
                with T.block("T_relu"):
                    v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                    T.reads(conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, v_ax2, v_ax3], p3[v_ax0, v_ax1, v_ax2, v_ax3])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, v_ax2, v_ax3] + p3[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nhwc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_add_1", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b3)
sch.compute_inline(block=b2)
sch.compute_inline(block=b0)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l5, factors=[v12, v13, v14, v15], preserve_unit_iters=True, disable_predication=False)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l6, factors=[v20, v21, v22, v23], preserve_unit_iters=True, disable_predication=False)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l7, factors=[v28, v29, v30, v31], preserve_unit_iters=True, disable_predication=False)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 32, 2, 8])
l40, l41, l42, l43 = sch.split(loop=l8, factors=[v36, v37, v38, v39], preserve_unit_iters=True, disable_predication=False)
v44, v45 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l46, l47 = sch.split(loop=l9, factors=[v44, v45], preserve_unit_iters=True, disable_predication=False)
v48, v49 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l50, l51 = sch.split(loop=l10, factors=[v48, v49], preserve_unit_iters=True, disable_predication=False)
v52, v53 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[2048, 1])
l54, l55 = sch.split(loop=l11, factors=[v52, v53], preserve_unit_iters=True, disable_predication=False)
sch.reorder(l16, l24, l32, l40, l17, l25, l33, l41, l46, l50, l54, l18, l26, l34, l42, l47, l51, l55, l19, l27, l35, l43)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.vectorize", ann_val=64)
v56 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v56)
2024-04-30 19:06:08 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), p1: T.Buffer((T.int64(1), T.int64(1), T.int64(2048), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(512)), "float32"), p3: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(512)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(512)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 96, "meta_schedule.unroll_explicit": 0, "meta_schedule.vectorize": 64})
            conv2d_nhwc = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(512)))
            for nn_0, yy_0, xx_0, ff_0, nn_1, yy_1, xx_1, ff_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(32)):
                for ry_0, rx_0, rc_0, nn_2, yy_2, xx_2, ff_2, ry_1, rx_1, rc_1, nn_3, yy_3, xx_3, ff_3 in T.grid(T.int64(1), T.int64(1), T.int64(2048), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(8)):
                    with T.block("conv2d_nhwc"):
                        v_nn = T.axis.spatial(T.int64(1), nn_0 + nn_1 + nn_2 + nn_3)
                        v_yy = T.axis.spatial(T.int64(1), yy_0 + yy_1 + yy_2 + yy_3)
                        v_xx = T.axis.spatial(T.int64(1), xx_0 + xx_1 + xx_2 + xx_3)
                        v_ff = T.axis.spatial(T.int64(512), ff_0 * T.int64(512) + ff_1 * T.int64(16) + ff_2 * T.int64(8) + ff_3)
                        v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1)
                        v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1)
                        v_rc = T.axis.reduce(T.int64(2048), rc_0 + rc_1)
                        T.reads(p0[v_nn, v_yy + v_ry, v_xx + v_rx, v_rc], p1[v_ry, v_rx, v_rc, v_ff])
                        T.writes(conv2d_nhwc[v_nn, v_yy, v_xx, v_ff])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = T.float32(0)
                        conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] + p0[v_nn, v_yy + v_ry, v_xx + v_rx, v_rc] * p1[v_ry, v_rx, v_rc, v_ff]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(16)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1, v_ax2 = T.axis.remap("SSS", [ax0, ax1, ax2])
                        v_ax3 = T.axis.spatial(T.int64(512), ff_1 * T.int64(16) + ax3)
                        T.reads(conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, v_ax2, v_ax3], p3[v_ax0, v_ax1, v_ax2, v_ax3])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, v_ax2, v_ax3] + p3[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nhwc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_add_1", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b3)
sch.compute_inline(block=b2)
sch.compute_inline(block=b0)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l5, factors=[v12, v13, v14, v15], preserve_unit_iters=True, disable_predication=False)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l6, factors=[v20, v21, v22, v23], preserve_unit_iters=True, disable_predication=False)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l7, factors=[v28, v29, v30, v31], preserve_unit_iters=True, disable_predication=False)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 32, 2, 8])
l40, l41, l42, l43 = sch.split(loop=l8, factors=[v36, v37, v38, v39], preserve_unit_iters=True, disable_predication=False)
v44, v45 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l46, l47 = sch.split(loop=l9, factors=[v44, v45], preserve_unit_iters=True, disable_predication=False)
v48, v49 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l50, l51 = sch.split(loop=l10, factors=[v48, v49], preserve_unit_iters=True, disable_predication=False)
v52, v53 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[2048, 1])
l54, l55 = sch.split(loop=l11, factors=[v52, v53], preserve_unit_iters=True, disable_predication=False)
sch.reorder(l16, l24, l32, l40, l17, l25, l33, l41, l46, l50, l54, l18, l26, l34, l42, l47, l51, l55, l19, l27, l35, l43)
b56, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b56, loop=l41, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.vectorize", ann_val=64)
v57 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v57)
2024-04-30 19:06:08 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), p1: T.Buffer((T.int64(1), T.int64(1), T.int64(2048), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(512)), "float32"), p3: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(512)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(512)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 96, "meta_schedule.unroll_explicit": 0, "meta_schedule.vectorize": 64})
            conv2d_nhwc = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(512)))
            for nn_0, yy_0, xx_0, ff_0 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                for nn_1, yy_1, xx_1, ff_1, ry_0, rx_0, rc_0, nn_2, yy_2, xx_2, ff_2, ry_1, rx_1, rc_1, nn_3, yy_3, xx_3, ff_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(2048), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(8)):
                    with T.block("conv2d_nhwc"):
                        v_nn = T.axis.spatial(T.int64(1), nn_0 + nn_1 + nn_2 + nn_3)
                        v_yy = T.axis.spatial(T.int64(1), yy_0 + yy_1 + yy_2 + yy_3)
                        v_xx = T.axis.spatial(T.int64(1), xx_0 + xx_1 + xx_2 + xx_3)
                        v_ff = T.axis.spatial(T.int64(512), ff_0 * T.int64(512) + ff_1 * T.int64(16) + ff_2 * T.int64(8) + ff_3)
                        v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1)
                        v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1)
                        v_rc = T.axis.reduce(T.int64(2048), rc_0 + rc_1)
                        T.reads(p0[v_nn, v_yy + v_ry, v_xx + v_rx, v_rc], p1[v_ry, v_rx, v_rc, v_ff])
                        T.writes(conv2d_nhwc[v_nn, v_yy, v_xx, v_ff])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = T.float32(0)
                        conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] + p0[v_nn, v_yy + v_ry, v_xx + v_rx, v_rc] * p1[v_ry, v_rx, v_rc, v_ff]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(512)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                        T.reads(conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, v_ax2, v_ax3], p3[v_ax0, v_ax1, v_ax2, v_ax3])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, v_ax2, v_ax3] + p3[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nhwc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_add_1", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b3)
sch.compute_inline(block=b2)
sch.compute_inline(block=b0)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l5, factors=[v12, v13, v14, v15], preserve_unit_iters=True, disable_predication=False)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l6, factors=[v20, v21, v22, v23], preserve_unit_iters=True, disable_predication=False)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l7, factors=[v28, v29, v30, v31], preserve_unit_iters=True, disable_predication=False)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 32, 2, 8])
l40, l41, l42, l43 = sch.split(loop=l8, factors=[v36, v37, v38, v39], preserve_unit_iters=True, disable_predication=False)
v44, v45 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l46, l47 = sch.split(loop=l9, factors=[v44, v45], preserve_unit_iters=True, disable_predication=False)
v48, v49 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l50, l51 = sch.split(loop=l10, factors=[v48, v49], preserve_unit_iters=True, disable_predication=False)
v52, v53 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[2048, 1])
l54, l55 = sch.split(loop=l11, factors=[v52, v53], preserve_unit_iters=True, disable_predication=False)
sch.reorder(l16, l24, l32, l40, l17, l25, l33, l41, l46, l50, l54, l18, l26, l34, l42, l47, l51, l55, l19, l27, l35, l43)
b56, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b56, loop=l40, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.vectorize", ann_val=64)
v57 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v57)
2024-04-30 19:13:55 [INFO] [task_scheduler.cc:160] Initializing Task #25: "fused_nn_conv2d_add_add_nn_relu_8"
2024-04-30 19:13:55 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), p1: T.Buffer((T.int64(1), T.int64(1), T.int64(2048), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(512)), "float32"), p3: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(512)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(512)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        pad_temp = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)))
        conv2d_nhwc = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(512)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(512)))
        T_add_1 = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(512)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2048)):
            with T.block("pad_temp"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2, v_i3])
                T.writes(pad_temp[v_i0, v_i1, v_i2, v_i3])
                pad_temp[v_i0, v_i1, v_i2, v_i3] = p0[v_i0, v_i1, v_i2, v_i3]
        for nn, yy, xx, ff, ry, rx, rc in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(512), T.int64(1), T.int64(1), T.int64(2048)):
            with T.block("conv2d_nhwc"):
                v_nn, v_yy, v_xx, v_ff, v_ry, v_rx, v_rc = T.axis.remap("SSSSRRR", [nn, yy, xx, ff, ry, rx, rc])
                T.reads(pad_temp[v_nn, v_yy + v_ry, v_xx + v_rx, v_rc], p1[v_ry, v_rx, v_rc, v_ff])
                T.writes(conv2d_nhwc[v_nn, v_yy, v_xx, v_ff])
                with T.init():
                    conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = T.float32(0)
                conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] + pad_temp[v_nn, v_yy + v_ry, v_xx + v_rx, v_rc] * p1[v_ry, v_rx, v_rc, v_ff]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(512)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, v_ax2, v_ax3]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(512)):
            with T.block("T_add_1"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3], p3[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_add_1[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add_1[v_ax0, v_ax1, v_ax2, v_ax3] = T_add[v_ax0, v_ax1, v_ax2, v_ax3] + p3[v_ax0, v_ax1, v_ax2, v_ax3]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(512)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add_1[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add_1[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-04-30 19:13:55 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-30 19:13:55 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), p1: T.Buffer((T.int64(1), T.int64(1), T.int64(2048), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(512)), "float32"), p3: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(512)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(512)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 96, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            conv2d_nhwc = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(512)))
            for nn_0, yy_0, xx_0, ff_0, nn_1, yy_1, xx_1, ff_1, ry_0, rx_0, rc_0, nn_2, yy_2, xx_2, ff_2, ry_1, rx_1, rc_1, nn_3, yy_3, xx_3, ff_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(32)):
                with T.block("conv2d_nhwc"):
                    v_nn = T.axis.spatial(T.int64(1), nn_0 + nn_1 + nn_2 + nn_3)
                    v_yy = T.axis.spatial(T.int64(1), yy_0 + yy_1 + yy_2 + yy_3)
                    v_xx = T.axis.spatial(T.int64(1), xx_0 + xx_1 + xx_2 + xx_3)
                    v_ff = T.axis.spatial(T.int64(512), ff_0 * T.int64(512) + ff_1 * T.int64(128) + ff_2 * T.int64(32) + ff_3)
                    v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1)
                    v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1)
                    v_rc = T.axis.reduce(T.int64(2048), rc_0 * T.int64(32) + rc_1)
                    T.reads(p0[v_nn, v_yy + v_ry, v_xx + v_rx, v_rc], p1[v_ry, v_rx, v_rc, v_ff])
                    T.writes(conv2d_nhwc[v_nn, v_yy, v_xx, v_ff])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = T.float32(0)
                    conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] + p0[v_nn, v_yy + v_ry, v_xx + v_rx, v_rc] * p1[v_ry, v_rx, v_rc, v_ff]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(512)):
                with T.block("T_relu"):
                    v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                    T.reads(conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, v_ax2, v_ax3], p3[v_ax0, v_ax1, v_ax2, v_ax3])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, v_ax2, v_ax3] + p3[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nhwc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_add_1", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b3)
sch.compute_inline(block=b2)
sch.compute_inline(block=b0)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l5, factors=[v12, v13, v14, v15], preserve_unit_iters=True, disable_predication=False)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l6, factors=[v20, v21, v22, v23], preserve_unit_iters=True, disable_predication=False)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l7, factors=[v28, v29, v30, v31], preserve_unit_iters=True, disable_predication=False)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 4, 4, 32])
l40, l41, l42, l43 = sch.split(loop=l8, factors=[v36, v37, v38, v39], preserve_unit_iters=True, disable_predication=False)
v44, v45 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l46, l47 = sch.split(loop=l9, factors=[v44, v45], preserve_unit_iters=True, disable_predication=False)
v48, v49 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l50, l51 = sch.split(loop=l10, factors=[v48, v49], preserve_unit_iters=True, disable_predication=False)
v52, v53 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[64, 32])
l54, l55 = sch.split(loop=l11, factors=[v52, v53], preserve_unit_iters=True, disable_predication=False)
sch.reorder(l16, l24, l32, l40, l17, l25, l33, l41, l46, l50, l54, l18, l26, l34, l42, l47, l51, l55, l19, l27, l35, l43)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.vectorize", ann_val=64)
v56 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v56)
2024-04-30 19:13:55 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), p1: T.Buffer((T.int64(1), T.int64(1), T.int64(2048), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(512)), "float32"), p3: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(512)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(512)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 96, "meta_schedule.unroll_explicit": 0, "meta_schedule.vectorize": 64})
            conv2d_nhwc = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(512)))
            for nn_0, yy_0, xx_0, ff_0, nn_1, yy_1, xx_1, ff_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4)):
                for ry_0, rx_0, rc_0, nn_2, yy_2, xx_2, ff_2, ry_1, rx_1, rc_1, nn_3, yy_3, xx_3, ff_3 in T.grid(T.int64(1), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(32)):
                    with T.block("conv2d_nhwc"):
                        v_nn = T.axis.spatial(T.int64(1), nn_0 + nn_1 + nn_2 + nn_3)
                        v_yy = T.axis.spatial(T.int64(1), yy_0 + yy_1 + yy_2 + yy_3)
                        v_xx = T.axis.spatial(T.int64(1), xx_0 + xx_1 + xx_2 + xx_3)
                        v_ff = T.axis.spatial(T.int64(512), ff_0 * T.int64(512) + ff_1 * T.int64(128) + ff_2 * T.int64(32) + ff_3)
                        v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1)
                        v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1)
                        v_rc = T.axis.reduce(T.int64(2048), rc_0 * T.int64(32) + rc_1)
                        T.reads(p0[v_nn, v_yy + v_ry, v_xx + v_rx, v_rc], p1[v_ry, v_rx, v_rc, v_ff])
                        T.writes(conv2d_nhwc[v_nn, v_yy, v_xx, v_ff])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = T.float32(0)
                        conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] + p0[v_nn, v_yy + v_ry, v_xx + v_rx, v_rc] * p1[v_ry, v_rx, v_rc, v_ff]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(128)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1, v_ax2 = T.axis.remap("SSS", [ax0, ax1, ax2])
                        v_ax3 = T.axis.spatial(T.int64(512), ff_1 * T.int64(128) + ax3)
                        T.reads(conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, v_ax2, v_ax3], p3[v_ax0, v_ax1, v_ax2, v_ax3])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, v_ax2, v_ax3] + p3[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nhwc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_add_1", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b3)
sch.compute_inline(block=b2)
sch.compute_inline(block=b0)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l5, factors=[v12, v13, v14, v15], preserve_unit_iters=True, disable_predication=False)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l6, factors=[v20, v21, v22, v23], preserve_unit_iters=True, disable_predication=False)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l7, factors=[v28, v29, v30, v31], preserve_unit_iters=True, disable_predication=False)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 4, 4, 32])
l40, l41, l42, l43 = sch.split(loop=l8, factors=[v36, v37, v38, v39], preserve_unit_iters=True, disable_predication=False)
v44, v45 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l46, l47 = sch.split(loop=l9, factors=[v44, v45], preserve_unit_iters=True, disable_predication=False)
v48, v49 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l50, l51 = sch.split(loop=l10, factors=[v48, v49], preserve_unit_iters=True, disable_predication=False)
v52, v53 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[64, 32])
l54, l55 = sch.split(loop=l11, factors=[v52, v53], preserve_unit_iters=True, disable_predication=False)
sch.reorder(l16, l24, l32, l40, l17, l25, l33, l41, l46, l50, l54, l18, l26, l34, l42, l47, l51, l55, l19, l27, l35, l43)
b56, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b56, loop=l41, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.vectorize", ann_val=64)
v57 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v57)
2024-04-30 19:13:55 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), p1: T.Buffer((T.int64(1), T.int64(1), T.int64(2048), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(512)), "float32"), p3: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(512)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(512)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 96, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            conv2d_nhwc = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(512)))
            for nn_0, yy_0, xx_0, ff_0 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                for nn_1, yy_1, xx_1, ff_1, ry_0, rx_0, rc_0, nn_2, yy_2, xx_2, ff_2, ry_1, rx_1, rc_1, nn_3, yy_3, xx_3, ff_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(32)):
                    with T.block("conv2d_nhwc"):
                        v_nn = T.axis.spatial(T.int64(1), nn_0 + nn_1 + nn_2 + nn_3)
                        v_yy = T.axis.spatial(T.int64(1), yy_0 + yy_1 + yy_2 + yy_3)
                        v_xx = T.axis.spatial(T.int64(1), xx_0 + xx_1 + xx_2 + xx_3)
                        v_ff = T.axis.spatial(T.int64(512), ff_0 * T.int64(512) + ff_1 * T.int64(128) + ff_2 * T.int64(32) + ff_3)
                        v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1)
                        v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1)
                        v_rc = T.axis.reduce(T.int64(2048), rc_0 * T.int64(32) + rc_1)
                        T.reads(p0[v_nn, v_yy + v_ry, v_xx + v_rx, v_rc], p1[v_ry, v_rx, v_rc, v_ff])
                        T.writes(conv2d_nhwc[v_nn, v_yy, v_xx, v_ff])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = T.float32(0)
                        conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] + p0[v_nn, v_yy + v_ry, v_xx + v_rx, v_rc] * p1[v_ry, v_rx, v_rc, v_ff]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(512)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                        T.reads(conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, v_ax2, v_ax3], p3[v_ax0, v_ax1, v_ax2, v_ax3])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, v_ax2, v_ax3] + p3[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nhwc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_add_1", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b3)
sch.compute_inline(block=b2)
sch.compute_inline(block=b0)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l5, factors=[v12, v13, v14, v15], preserve_unit_iters=True, disable_predication=False)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l6, factors=[v20, v21, v22, v23], preserve_unit_iters=True, disable_predication=False)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l7, factors=[v28, v29, v30, v31], preserve_unit_iters=True, disable_predication=False)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 4, 4, 32])
l40, l41, l42, l43 = sch.split(loop=l8, factors=[v36, v37, v38, v39], preserve_unit_iters=True, disable_predication=False)
v44, v45 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l46, l47 = sch.split(loop=l9, factors=[v44, v45], preserve_unit_iters=True, disable_predication=False)
v48, v49 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l50, l51 = sch.split(loop=l10, factors=[v48, v49], preserve_unit_iters=True, disable_predication=False)
v52, v53 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[64, 32])
l54, l55 = sch.split(loop=l11, factors=[v52, v53], preserve_unit_iters=True, disable_predication=False)
sch.reorder(l16, l24, l32, l40, l17, l25, l33, l41, l46, l50, l54, l18, l26, l34, l42, l47, l51, l55, l19, l27, l35, l43)
b56, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b56, loop=l40, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.vectorize", ann_val=64)
v57 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v57)
2024-04-30 19:32:10 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 19:32:10 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-30 19:32:12 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x10777058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xf84ea28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x1bc9b638)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xcfdb958)]: 0 failure(s)
2024-04-30 19:32:12 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-30 19:32:14 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x10777058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xf84ea28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x1bc9b638)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xcfdb958)]: 0 failure(s)
2024-04-30 19:32:17 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x10777058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xf84ea28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x1bc9b638)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xcfdb958)]: 0 failure(s)
2024-04-30 19:32:19 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x10777058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xf84ea28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x1bc9b638)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xcfdb958)]: 0 failure(s)
2024-04-30 19:32:22 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x10777058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xf84ea28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x1bc9b638)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xcfdb958)]: 0 failure(s)
2024-04-30 19:32:22 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9995  0.9994  0.9971  0.9969  0.9941  0.9937  0.9936  0.9935  0.9930  0.9926  0.9918  0.9912  0.9912  0.9912  0.9907  0.9891
[17 : 32]:	0.9890  0.9881  0.9877  0.9872  0.9863  0.9862  0.9850  0.9814  0.9814  0.9813  0.9807  0.9798  0.9797  0.9795  0.9795  0.9773
[33 : 48]:	0.9773  0.9770  0.9763  0.9755  0.9752  0.9751  0.9748  0.9747  0.9746  0.9739  0.9736  0.9735  0.9733  0.9730  0.9730  0.9711
[49 : 64]:	0.9705  0.9702  0.9701  0.9700  0.9698  0.9696  0.9692  0.9691  0.9673  0.9671  0.9670  0.9655  0.9653  0.9648  0.9639  0.9620
2024-04-30 19:32:22 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 19:32:23 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #1: GFLOPs: 8.1818. Time: 256.5061 us. Best GFLOPs: 8.1818
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #2: GFLOPs: 9.7982. Time: 214.1906 us. Best GFLOPs: 9.7982
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #3: GFLOPs: 7.5562. Time: 277.7430 us. Best GFLOPs: 9.7982
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #4: GFLOPs: 10.9024. Time: 192.4976 us. Best GFLOPs: 10.9024
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #5: GFLOPs: 4.5592. Time: 460.3181 us. Best GFLOPs: 10.9024
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #6: GFLOPs: 0.5597. Time: 3749.8716 us. Best GFLOPs: 10.9024
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #7: GFLOPs: 4.5984. Time: 456.3930 us. Best GFLOPs: 10.9024
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #8: GFLOPs: 9.7010. Time: 216.3380 us. Best GFLOPs: 10.9024
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #9: GFLOPs: 14.4020. Time: 145.7215 us. Best GFLOPs: 14.4020
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #10: GFLOPs: 24.1887. Time: 86.7631 us. Best GFLOPs: 24.1887
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #11: GFLOPs: 5.3781. Time: 390.2255 us. Best GFLOPs: 24.1887
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #12: GFLOPs: 19.2298. Time: 109.1376 us. Best GFLOPs: 24.1887
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #13: GFLOPs: 3.2749. Time: 640.8454 us. Best GFLOPs: 24.1887
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #14: GFLOPs: 25.3027. Time: 82.9433 us. Best GFLOPs: 25.3027
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #15: GFLOPs: 8.5293. Time: 246.0553 us. Best GFLOPs: 25.3027
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #16: GFLOPs: 12.1864. Time: 172.2154 us. Best GFLOPs: 25.3027
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #17: GFLOPs: 10.0455. Time: 208.9180 us. Best GFLOPs: 25.3027
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #18: GFLOPs: 4.6322. Time: 453.0641 us. Best GFLOPs: 25.3027
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #19: GFLOPs: 5.7121. Time: 367.4101 us. Best GFLOPs: 25.3027
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #20: GFLOPs: 6.4004. Time: 327.8999 us. Best GFLOPs: 25.3027
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #21: GFLOPs: 3.1955. Time: 656.7562 us. Best GFLOPs: 25.3027
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #22: GFLOPs: 21.1978. Time: 99.0051 us. Best GFLOPs: 25.3027
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #23: GFLOPs: 4.1903. Time: 500.8500 us. Best GFLOPs: 25.3027
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #24: GFLOPs: 6.5342. Time: 321.1836 us. Best GFLOPs: 25.3027
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #25: GFLOPs: 7.7564. Time: 270.5752 us. Best GFLOPs: 25.3027
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #26: GFLOPs: 9.7507. Time: 215.2343 us. Best GFLOPs: 25.3027
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #27: GFLOPs: 22.9823. Time: 91.3174 us. Best GFLOPs: 25.3027
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #28: GFLOPs: 11.3249. Time: 185.3165 us. Best GFLOPs: 25.3027
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #29: GFLOPs: 13.8916. Time: 151.0761 us. Best GFLOPs: 25.3027
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #30: GFLOPs: 15.7873. Time: 132.9352 us. Best GFLOPs: 25.3027
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #31: GFLOPs: 5.5783. Time: 376.2236 us. Best GFLOPs: 25.3027
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #32: GFLOPs: 20.1609. Time: 104.0969 us. Best GFLOPs: 25.3027
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #33: GFLOPs: 4.3317. Time: 484.4976 us. Best GFLOPs: 25.3027
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #34: GFLOPs: 6.9517. Time: 301.8951 us. Best GFLOPs: 25.3027
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #35: GFLOPs: 16.5523. Time: 126.7914 us. Best GFLOPs: 25.3027
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #36: GFLOPs: 5.0905. Time: 412.2721 us. Best GFLOPs: 25.3027
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #37: GFLOPs: 4.7805. Time: 439.0078 us. Best GFLOPs: 25.3027
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #38: GFLOPs: 24.2191. Time: 86.6544 us. Best GFLOPs: 25.3027
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #39: GFLOPs: 20.8047. Time: 100.8757 us. Best GFLOPs: 25.3027
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #40: GFLOPs: 18.3441. Time: 114.4069 us. Best GFLOPs: 25.3027
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #41: GFLOPs: 21.8174. Time: 96.1933 us. Best GFLOPs: 25.3027
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #42: GFLOPs: 17.2315. Time: 121.7934 us. Best GFLOPs: 25.3027
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #43: GFLOPs: 9.4373. Time: 222.3830 us. Best GFLOPs: 25.3027
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #44: GFLOPs: 16.9777. Time: 123.6144 us. Best GFLOPs: 25.3027
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #45: GFLOPs: 4.5247. Time: 463.8300 us. Best GFLOPs: 25.3027
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #46: GFLOPs: 26.0349. Time: 80.6107 us. Best GFLOPs: 26.0349
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #47: GFLOPs: 21.3162. Time: 98.4549 us. Best GFLOPs: 26.0349
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #48: GFLOPs: 5.8175. Time: 360.7551 us. Best GFLOPs: 26.0349
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #49: GFLOPs: 9.1953. Time: 228.2344 us. Best GFLOPs: 26.0349
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #50: GFLOPs: 2.4101. Time: 870.7939 us. Best GFLOPs: 26.0349
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #51: GFLOPs: 16.8486. Time: 124.5619 us. Best GFLOPs: 26.0349
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #52: GFLOPs: 21.7169. Time: 96.6384 us. Best GFLOPs: 26.0349
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #53: GFLOPs: 3.8177. Time: 549.7186 us. Best GFLOPs: 26.0349
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #54: GFLOPs: 25.1754. Time: 83.3626 us. Best GFLOPs: 26.0349
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #55: GFLOPs: 9.0727. Time: 231.3190 us. Best GFLOPs: 26.0349
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #56: GFLOPs: 5.1807. Time: 405.1011 us. Best GFLOPs: 26.0349
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #57: GFLOPs: 6.0315. Time: 347.9521 us. Best GFLOPs: 26.0349
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #58: GFLOPs: 5.7900. Time: 362.4668 us. Best GFLOPs: 26.0349
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #59: GFLOPs: 15.7404. Time: 133.3315 us. Best GFLOPs: 26.0349
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #60: GFLOPs: 4.9025. Time: 428.0859 us. Best GFLOPs: 26.0349
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #61: GFLOPs: 7.0760. Time: 296.5931 us. Best GFLOPs: 26.0349
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #62: GFLOPs: 7.9325. Time: 264.5694 us. Best GFLOPs: 26.0349
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #63: GFLOPs: 27.0106. Time: 77.6987 us. Best GFLOPs: 27.0106
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #64: GFLOPs: 9.3968. Time: 223.3404 us. Best GFLOPs: 27.0106
2024-04-30 19:52:07 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 19:52:07 [INFO] [evolutionary_search.cc:715] Picked top 64 candidate(s) from database
2024-04-30 19:52:08 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x10777058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xf84ea28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x1bc9b638)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xcfdb958)]: 0 failure(s)
2024-04-30 19:52:08 [INFO] [evolutionary_search.cc:723] Sampled 448 candidate(s)
2024-04-30 19:52:11 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x10777058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xf84ea28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x1bc9b638)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xcfdb958)]: 0 failure(s)
2024-04-30 19:52:14 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x10777058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xf84ea28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x1bc9b638)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xcfdb958)]: 0 failure(s)
2024-04-30 19:52:17 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x10777058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xf84ea28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x1bc9b638)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xcfdb958)]: 0 failure(s)
2024-04-30 19:52:20 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x10777058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xf84ea28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x1bc9b638)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xcfdb958)]: 0 failure(s)
2024-04-30 19:52:22 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9875  0.9872  0.9763  0.9763  0.9763  0.9763  0.9763  0.9763  0.9736  0.9645  0.9539  0.9539  0.9535  0.9514  0.9514  0.9514
[17 : 32]:	0.9499  0.9388  0.9387  0.9387  0.9385  0.9363  0.9363  0.9363  0.9359  0.9345  0.9345  0.9338  0.9306  0.9275  0.9275  0.9238
[33 : 48]:	0.9238  0.9234  0.9218  0.9216  0.9216  0.9196  0.9196  0.9185  0.9166  0.9166  0.9165  0.9142  0.9142  0.9121  0.9121  0.9121
[49 : 64]:	0.9121  0.9083  0.9062  0.9062  0.9059  0.9059  0.9010  0.9010  0.9009  0.9006  0.9006  0.9000  0.8950  0.8950  0.8912  0.8908
2024-04-30 19:52:22 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 19:52:22 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #65: GFLOPs: 31.4290. Time: 66.7754 us. Best GFLOPs: 31.4290
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #66: GFLOPs: 35.2246. Time: 59.5801 us. Best GFLOPs: 35.2246
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #67: GFLOPs: 30.5380. Time: 68.7239 us. Best GFLOPs: 35.2246
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #68: GFLOPs: 31.2084. Time: 67.2476 us. Best GFLOPs: 35.2246
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #69: GFLOPs: 28.4429. Time: 73.7859 us. Best GFLOPs: 35.2246
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #70: GFLOPs: 24.2341. Time: 86.6006 us. Best GFLOPs: 35.2246
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #71: GFLOPs: 29.1102. Time: 72.0945 us. Best GFLOPs: 35.2246
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #72: GFLOPs: 32.8284. Time: 63.9291 us. Best GFLOPs: 35.2246
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #73: GFLOPs: 30.5830. Time: 68.6228 us. Best GFLOPs: 35.2246
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #74: GFLOPs: 32.9969. Time: 63.6026 us. Best GFLOPs: 35.2246
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #75: GFLOPs: 34.8135. Time: 60.2837 us. Best GFLOPs: 35.2246
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #76: GFLOPs: 35.8781. Time: 58.4950 us. Best GFLOPs: 35.8781
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #77: GFLOPs: 31.2243. Time: 67.2133 us. Best GFLOPs: 35.8781
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #78: GFLOPs: 27.9908. Time: 74.9779 us. Best GFLOPs: 35.8781
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #79: GFLOPs: 29.8427. Time: 70.3249 us. Best GFLOPs: 35.8781
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #80: GFLOPs: 31.9408. Time: 65.7055 us. Best GFLOPs: 35.8781
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #81: GFLOPs: 28.4792. Time: 73.6918 us. Best GFLOPs: 35.8781
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #82: GFLOPs: 30.0155. Time: 69.9201 us. Best GFLOPs: 35.8781
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #83: GFLOPs: 35.6903. Time: 58.8027 us. Best GFLOPs: 35.8781
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #84: GFLOPs: 31.3330. Time: 66.9801 us. Best GFLOPs: 35.8781
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #85: GFLOPs: 29.9834. Time: 69.9950 us. Best GFLOPs: 35.8781
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #86: GFLOPs: 31.9599. Time: 65.6662 us. Best GFLOPs: 35.8781
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #87: GFLOPs: 32.0845. Time: 65.4113 us. Best GFLOPs: 35.8781
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #88: GFLOPs: 32.3797. Time: 64.8148 us. Best GFLOPs: 35.8781
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #89: GFLOPs: 34.8162. Time: 60.2791 us. Best GFLOPs: 35.8781
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #90: GFLOPs: 34.5353. Time: 60.7694 us. Best GFLOPs: 35.8781
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #91: GFLOPs: 24.8902. Time: 84.3178 us. Best GFLOPs: 35.8781
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #92: GFLOPs: 33.7339. Time: 62.2130 us. Best GFLOPs: 35.8781
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #93: GFLOPs: 27.3954. Time: 76.6073 us. Best GFLOPs: 35.8781
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #94: GFLOPs: 32.1663. Time: 65.2449 us. Best GFLOPs: 35.8781
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #95: GFLOPs: 32.8372. Time: 63.9119 us. Best GFLOPs: 35.8781
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #96: GFLOPs: 31.7279. Time: 66.1464 us. Best GFLOPs: 35.8781
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #97: GFLOPs: 31.5351. Time: 66.5509 us. Best GFLOPs: 35.8781
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #98: GFLOPs: 35.6893. Time: 58.8043 us. Best GFLOPs: 35.8781
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #99: GFLOPs: 35.1519. Time: 59.7034 us. Best GFLOPs: 35.8781
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #100: GFLOPs: 29.7691. Time: 70.4989 us. Best GFLOPs: 35.8781
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #101: GFLOPs: 30.1173. Time: 69.6837 us. Best GFLOPs: 35.8781
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #102: GFLOPs: 29.5015. Time: 71.1383 us. Best GFLOPs: 35.8781
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #103: GFLOPs: 29.9097. Time: 70.1674 us. Best GFLOPs: 35.8781
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #104: GFLOPs: 35.2381. Time: 59.5574 us. Best GFLOPs: 35.8781
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #105: GFLOPs: 34.0794. Time: 61.5823 us. Best GFLOPs: 35.8781
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #106: GFLOPs: 33.9314. Time: 61.8509 us. Best GFLOPs: 35.8781
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #107: GFLOPs: 33.6338. Time: 62.3981 us. Best GFLOPs: 35.8781
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #108: GFLOPs: 31.9531. Time: 65.6802 us. Best GFLOPs: 35.8781
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #109: GFLOPs: 36.8960. Time: 56.8812 us. Best GFLOPs: 36.8960
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #110: GFLOPs: 36.4341. Time: 57.6022 us. Best GFLOPs: 36.8960
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #111: GFLOPs: 32.5332. Time: 64.5092 us. Best GFLOPs: 36.8960
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #112: GFLOPs: 32.6824. Time: 64.2146 us. Best GFLOPs: 36.8960
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #113: GFLOPs: 35.2848. Time: 59.4786 us. Best GFLOPs: 36.8960
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #114: GFLOPs: 36.5551. Time: 57.4117 us. Best GFLOPs: 36.8960
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #115: GFLOPs: 32.8197. Time: 63.9459 us. Best GFLOPs: 36.8960
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #116: GFLOPs: 35.9669. Time: 58.3505 us. Best GFLOPs: 36.8960
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #117: GFLOPs: 33.4057. Time: 62.8242 us. Best GFLOPs: 36.8960
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #118: GFLOPs: 35.4517. Time: 59.1985 us. Best GFLOPs: 36.8960
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #119: GFLOPs: 26.7717. Time: 78.3919 us. Best GFLOPs: 36.8960
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #120: GFLOPs: 32.6730. Time: 64.2330 us. Best GFLOPs: 36.8960
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #121: GFLOPs: 31.4771. Time: 66.6734 us. Best GFLOPs: 36.8960
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #122: GFLOPs: 34.2793. Time: 61.2232 us. Best GFLOPs: 36.8960
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #123: GFLOPs: 33.4957. Time: 62.6554 us. Best GFLOPs: 36.8960
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #124: GFLOPs: 35.3913. Time: 59.2995 us. Best GFLOPs: 36.8960
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #125: GFLOPs: 30.8687. Time: 67.9876 us. Best GFLOPs: 36.8960
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #126: GFLOPs: 10.5110. Time: 199.6650 us. Best GFLOPs: 36.8960
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #127: GFLOPs: 27.1085. Time: 77.4181 us. Best GFLOPs: 36.8960
2024-04-30 19:52:45 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #128: GFLOPs: 4.5098. Time: 465.3655 us. Best GFLOPs: 36.8960
2024-04-30 20:06:17 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 20:06:17 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 20:06:19 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x10777058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xf84ea28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x1bc9b638)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xcfdb958)]: 0 failure(s)
2024-04-30 20:06:19 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-30 20:06:22 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x10777058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xf84ea28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x1bc9b638)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xcfdb958)]: 0 failure(s)
2024-04-30 20:06:24 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x10777058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xf84ea28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x1bc9b638)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xcfdb958)]: 0 failure(s)
2024-04-30 20:06:28 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x10777058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xf84ea28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x1bc9b638)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xcfdb958)]: 0 failure(s)
2024-04-30 20:06:31 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x10777058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xf84ea28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x1bc9b638)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xcfdb958)]: 0 failure(s)
2024-04-30 20:06:34 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9731  0.9645  0.9532  0.9529  0.9529  0.9484  0.9418  0.9368  0.9347  0.9334  0.9312  0.9309  0.9309  0.9288  0.9288  0.9206
[17 : 32]:	0.9197  0.9197  0.9142  0.9140  0.9136  0.9124  0.9056  0.9052  0.9033  0.9033  0.8993  0.8981  0.8975  0.8975  0.8941  0.8940
[33 : 48]:	0.8869  0.8869  0.8841  0.8808  0.8787  0.8775  0.8775  0.8753  0.8753  0.8743  0.8738  0.8730  0.8719  0.8675  0.8673  0.8673
[49 : 64]:	0.8670  0.8668  0.8667  0.8664  0.8648  0.8648  0.8642  0.8636  0.8635  0.8627  0.8627  0.8627  0.8627  0.8623  0.8600  0.8600
2024-04-30 20:06:34 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 20:06:34 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #129: GFLOPs: 24.5875. Time: 85.3558 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #130: GFLOPs: 30.4957. Time: 68.8192 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #131: GFLOPs: 31.6481. Time: 66.3133 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #132: GFLOPs: 29.8433. Time: 70.3235 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #133: GFLOPs: 30.1227. Time: 69.6713 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #134: GFLOPs: 31.8592. Time: 65.8739 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #135: GFLOPs: 30.6024. Time: 68.5791 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #136: GFLOPs: 23.8036. Time: 88.1669 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #137: GFLOPs: 28.5966. Time: 73.3893 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #138: GFLOPs: 31.8732. Time: 65.8450 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #139: GFLOPs: 30.9119. Time: 67.8926 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #140: GFLOPs: 29.5834. Time: 70.9413 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #141: GFLOPs: 26.1143. Time: 80.3654 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #142: GFLOPs: 27.7917. Time: 75.5149 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #143: GFLOPs: 27.9898. Time: 74.9804 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #144: GFLOPs: 30.7134. Time: 68.3315 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #145: GFLOPs: 32.0166. Time: 65.5499 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #146: GFLOPs: 30.8484. Time: 68.0322 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #147: GFLOPs: 31.4678. Time: 66.6932 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #148: GFLOPs: 32.1020. Time: 65.3757 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #149: GFLOPs: 29.1232. Time: 72.0623 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #150: GFLOPs: 30.5781. Time: 68.6337 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #151: GFLOPs: 30.4459. Time: 68.9317 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #152: GFLOPs: 28.7767. Time: 72.9301 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #153: GFLOPs: 33.9015. Time: 61.9054 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #154: GFLOPs: 31.5334. Time: 66.5544 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #155: GFLOPs: 30.6224. Time: 68.5344 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #156: GFLOPs: 24.1308. Time: 86.9715 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #157: GFLOPs: 29.7027. Time: 70.6565 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #158: GFLOPs: 29.6525. Time: 70.7761 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #159: GFLOPs: 32.2253. Time: 65.1256 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #160: GFLOPs: 26.5103. Time: 79.1649 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #161: GFLOPs: 20.4087. Time: 102.8331 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #162: GFLOPs: 32.8178. Time: 63.9496 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #163: GFLOPs: 27.0597. Time: 77.5578 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #164: GFLOPs: 29.3097. Time: 71.6040 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #165: GFLOPs: 30.8432. Time: 68.0438 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #166: GFLOPs: 26.9820. Time: 77.7810 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #167: GFLOPs: 26.9122. Time: 77.9827 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #168: GFLOPs: 31.1505. Time: 67.3726 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #169: GFLOPs: 29.7798. Time: 70.4736 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #170: GFLOPs: 27.6723. Time: 75.8406 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #171: GFLOPs: 28.8574. Time: 72.7262 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #172: GFLOPs: 27.2576. Time: 76.9947 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #173: GFLOPs: 29.2630. Time: 71.7182 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #174: GFLOPs: 26.7753. Time: 78.3815 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #175: GFLOPs: 28.1432. Time: 74.5718 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #176: GFLOPs: 27.0869. Time: 77.4797 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #177: GFLOPs: 29.3723. Time: 71.4512 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #178: GFLOPs: 25.2674. Time: 83.0592 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #179: GFLOPs: 26.8227. Time: 78.2429 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #180: GFLOPs: 24.6988. Time: 84.9713 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #181: GFLOPs: 28.8112. Time: 72.8428 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #182: GFLOPs: 27.9078. Time: 75.2007 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #183: GFLOPs: 24.4986. Time: 85.6656 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #184: GFLOPs: 30.6476. Time: 68.4781 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #185: GFLOPs: 25.2479. Time: 83.1233 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #186: GFLOPs: 31.6288. Time: 66.3536 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #187: GFLOPs: 30.8238. Time: 68.0865 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #188: GFLOPs: 28.8843. Time: 72.6584 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #189: GFLOPs: 22.2840. Time: 94.1791 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #190: GFLOPs: 18.6992. Time: 112.2343 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #191: GFLOPs: 30.4918. Time: 68.8279 us. Best GFLOPs: 36.8960
2024-04-30 20:07:01 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #192: GFLOPs: 3.2116. Time: 653.4759 us. Best GFLOPs: 36.8960
2024-04-30 20:11:48 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 20:11:49 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 20:11:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x10777058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xf84ea28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x1bc9b638)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xcfdb958)]: 0 failure(s)
2024-04-30 20:11:50 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-30 20:11:52 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x10777058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xf84ea28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x1bc9b638)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xcfdb958)]: 0 failure(s)
2024-04-30 20:11:54 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x10777058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xf84ea28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x1bc9b638)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xcfdb958)]: 0 failure(s)
2024-04-30 20:11:57 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x10777058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xf84ea28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x1bc9b638)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xcfdb958)]: 0 failure(s)
2024-04-30 20:11:59 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x10777058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xf84ea28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x1bc9b638)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xcfdb958)]: 0 failure(s)
2024-04-30 20:12:01 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8860  0.8697  0.8599  0.8457  0.8453  0.8453  0.8424  0.8417  0.8404  0.8404  0.8391  0.8360  0.8360  0.8360  0.8353  0.8353
[17 : 32]:	0.8353  0.8352  0.8311  0.8311  0.8250  0.8241  0.8233  0.8223  0.8223  0.8222  0.8219  0.8219  0.8201  0.8196  0.8196  0.8189
[33 : 48]:	0.8165  0.8155  0.8153  0.8142  0.8128  0.8125  0.8122  0.8122  0.8116  0.8116  0.8116  0.8111  0.8111  0.8101  0.8101  0.8099
[49 : 64]:	0.8099  0.8083  0.8083  0.8061  0.8061  0.8061  0.8060  0.8060  0.8060  0.8060  0.8031  0.8029  0.8028  0.8028  0.8014  0.8014
2024-04-30 20:12:01 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 20:12:01 [INFO] [evolutionary_search.cc:730] Sending 63 candidates(s) for measurement
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #193: GFLOPs: 80.4302. Time: 26.0933 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #194: GFLOPs: 68.6144. Time: 30.5867 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #195: GFLOPs: 64.3973. Time: 32.5897 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #196: GFLOPs: 64.1508. Time: 32.7149 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #197: GFLOPs: 63.0646. Time: 33.2784 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #198: GFLOPs: 62.0152. Time: 33.8415 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #199: GFLOPs: 58.3097. Time: 35.9921 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #200: GFLOPs: 67.3622. Time: 31.1553 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #201: GFLOPs: 64.7448. Time: 32.4148 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #202: GFLOPs: 63.8411. Time: 32.8736 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #203: GFLOPs: 57.0022. Time: 36.8176 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #204: GFLOPs: 67.4711. Time: 31.1050 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #205: GFLOPs: 65.7064. Time: 31.9404 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #206: GFLOPs: 55.6380. Time: 37.7204 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #207: GFLOPs: 67.8270. Time: 30.9418 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #208: GFLOPs: 68.1546. Time: 30.7931 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #209: GFLOPs: 64.2687. Time: 32.6549 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #210: GFLOPs: 54.7817. Time: 38.3100 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #211: GFLOPs: 68.0846. Time: 30.8247 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #212: GFLOPs: 65.0905. Time: 32.2426 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #213: GFLOPs: 71.1458. Time: 29.4984 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #214: GFLOPs: 59.7393. Time: 35.1308 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #215: GFLOPs: 43.1923. Time: 48.5894 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #216: GFLOPs: 46.5578. Time: 45.0771 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #217: GFLOPs: 58.9347. Time: 35.6104 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #218: GFLOPs: 58.3871. Time: 35.9444 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #219: GFLOPs: 60.0331. Time: 34.9588 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #220: GFLOPs: 55.6481. Time: 37.7136 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #221: GFLOPs: 53.2958. Time: 39.3781 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #222: GFLOPs: 57.3430. Time: 36.5988 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #223: GFLOPs: 61.0116. Time: 34.3982 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #224: GFLOPs: 60.9418. Time: 34.4376 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #225: GFLOPs: 47.0508. Time: 44.6047 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #226: GFLOPs: 54.2612. Time: 38.6775 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #227: GFLOPs: 49.8159. Time: 42.1288 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #228: GFLOPs: 49.5837. Time: 42.3261 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #229: GFLOPs: 60.4796. Time: 34.7008 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #230: GFLOPs: 51.9854. Time: 40.3708 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #231: GFLOPs: 56.6209. Time: 37.0656 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #232: GFLOPs: 61.4066. Time: 34.1769 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #233: GFLOPs: 65.2739. Time: 32.1520 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #234: GFLOPs: 68.2624. Time: 30.7444 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #235: GFLOPs: 61.9371. Time: 33.8842 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #236: GFLOPs: 55.6112. Time: 37.7386 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #237: GFLOPs: 58.5379. Time: 35.8518 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #238: GFLOPs: 62.1600. Time: 33.7627 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #239: GFLOPs: 58.3441. Time: 35.9709 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #240: GFLOPs: 60.1645. Time: 34.8825 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #241: GFLOPs: 67.6469. Time: 31.0242 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #242: GFLOPs: 59.7172. Time: 35.1438 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #243: GFLOPs: 60.8908. Time: 34.4664 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #244: GFLOPs: 60.7482. Time: 34.5473 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #245: GFLOPs: 65.7596. Time: 31.9146 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #246: GFLOPs: 63.2822. Time: 33.1640 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #247: GFLOPs: 64.6900. Time: 32.4422 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #248: GFLOPs: 64.0233. Time: 32.7801 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #249: GFLOPs: 64.4682. Time: 32.5538 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #250: GFLOPs: 62.7262. Time: 33.4579 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #251: GFLOPs: 60.4918. Time: 34.6937 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #252: GFLOPs: 56.7948. Time: 36.9521 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #253: GFLOPs: 59.8203. Time: 35.0832 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #254: GFLOPs: 29.1512. Time: 71.9933 us. Best GFLOPs: 80.4302
2024-04-30 20:12:22 [INFO] [task_scheduler.cc:131] [Task #25: fused_nn_conv2d_add_add_nn_relu_8] Trial #255: GFLOPs: 18.5699. Time: 113.0158 us. Best GFLOPs: 80.4302
