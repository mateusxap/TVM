2024-04-30 19:06:08 [INFO] [task_scheduler.cc:160] Initializing Task #24: "fused_nn_conv2d_add_multiply_add_add_nn_relu_6"
2024-04-30 19:06:08 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(1024)), "float32"), p1: T.Buffer((T.int64(1), T.int64(1), T.int64(1024), T.int64(2048)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), p3: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), p4: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), p5: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        pad_temp = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(1024)))
        conv2d_nhwc = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)))
        T_multiply = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)))
        T_add_1 = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)))
        T_add_2 = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(1024)):
            with T.block("pad_temp"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2, v_i3])
                T.writes(pad_temp[v_i0, v_i1, v_i2, v_i3])
                pad_temp[v_i0, v_i1, v_i2, v_i3] = p0[v_i0, v_i1, v_i2, v_i3]
        for nn, yy, xx, ff, ry, rx, rc in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2048), T.int64(1), T.int64(1), T.int64(1024)):
            with T.block("conv2d_nhwc"):
                v_nn, v_yy, v_xx, v_ff, v_ry, v_rx, v_rc = T.axis.remap("SSSSRRR", [nn, yy, xx, ff, ry, rx, rc])
                T.reads(pad_temp[v_nn, v_yy * T.int64(2) + v_ry, v_xx * T.int64(2) + v_rx, v_rc], p1[v_ry, v_rx, v_rc, v_ff])
                T.writes(conv2d_nhwc[v_nn, v_yy, v_xx, v_ff])
                with T.init():
                    conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = T.float32(0)
                conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] + pad_temp[v_nn, v_yy * T.int64(2) + v_ry, v_xx * T.int64(2) + v_rx, v_rc] * p1[v_ry, v_rx, v_rc, v_ff]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2048)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, v_ax2, v_ax3]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2048)):
            with T.block("T_multiply"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3], p3[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_multiply[v_ax0, v_ax1, v_ax2, v_ax3])
                T_multiply[v_ax0, v_ax1, v_ax2, v_ax3] = T_add[v_ax0, v_ax1, v_ax2, v_ax3] * p3[v_ax0, v_ax1, v_ax2, v_ax3]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2048)):
            with T.block("T_add_1"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_multiply[v_ax0, v_ax1, v_ax2, v_ax3], p4[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_add_1[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add_1[v_ax0, v_ax1, v_ax2, v_ax3] = T_multiply[v_ax0, v_ax1, v_ax2, v_ax3] + p4[v_ax0, v_ax1, v_ax2, v_ax3]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2048)):
            with T.block("T_add_2"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add_1[v_ax0, v_ax1, v_ax2, v_ax3], p5[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_add_2[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add_2[v_ax0, v_ax1, v_ax2, v_ax3] = T_add_1[v_ax0, v_ax1, v_ax2, v_ax3] + p5[v_ax0, v_ax1, v_ax2, v_ax3]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2048)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add_2[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add_2[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-04-30 19:06:08 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-30 19:06:08 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(1024)), "float32"), p1: T.Buffer((T.int64(1), T.int64(1), T.int64(1024), T.int64(2048)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), p3: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), p4: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), p5: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 96, "meta_schedule.unroll_explicit": 0, "meta_schedule.vectorize": 64})
            conv2d_nhwc = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)))
            for nn_0, yy_0, xx_0, ff_0, nn_1, yy_1, xx_1, ff_1, ry_0, rx_0, rc_0, nn_2, yy_2, xx_2, ff_2, ry_1, rx_1, rc_1, nn_3, yy_3, xx_3, ff_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(32)):
                with T.block("conv2d_nhwc"):
                    v_nn = T.axis.spatial(T.int64(1), nn_0 + nn_1 + nn_2 + nn_3)
                    v_yy = T.axis.spatial(T.int64(1), yy_0 + yy_1 + yy_2 + yy_3)
                    v_xx = T.axis.spatial(T.int64(1), xx_0 + xx_1 + xx_2 + xx_3)
                    v_ff = T.axis.spatial(T.int64(2048), ff_0 * T.int64(1024) + ff_1 * T.int64(128) + ff_2 * T.int64(32) + ff_3)
                    v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1)
                    v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1)
                    v_rc = T.axis.reduce(T.int64(1024), rc_0 * T.int64(64) + rc_1)
                    T.reads(p0[v_nn, v_yy * T.int64(2) + v_ry, v_xx * T.int64(2) + v_rx, v_rc], p1[v_ry, v_rx, v_rc, v_ff])
                    T.writes(conv2d_nhwc[v_nn, v_yy, v_xx, v_ff])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = T.float32(0)
                    conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] + p0[v_nn, v_yy * T.int64(2) + v_ry, v_xx * T.int64(2) + v_rx, v_rc] * p1[v_ry, v_rx, v_rc, v_ff]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2048)):
                with T.block("T_relu"):
                    v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                    T.reads(conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, v_ax2, v_ax3], p3[v_ax0, v_ax1, v_ax2, v_ax3], p4[v_ax0, v_ax1, v_ax2, v_ax3], p5[v_ax0, v_ax1, v_ax2, v_ax3])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max((conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, v_ax2, v_ax3]) * p3[v_ax0, v_ax1, v_ax2, v_ax3] + p4[v_ax0, v_ax1, v_ax2, v_ax3] + p5[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nhwc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_multiply", func_name="main")
b4 = sch.get_block(name="T_add_1", func_name="main")
b5 = sch.get_block(name="T_add_2", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b5)
sch.compute_inline(block=b4)
sch.compute_inline(block=b3)
sch.compute_inline(block=b2)
sch.compute_inline(block=b0)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l7, l8, l9, l10, l11, l12, l13 = sch.get_loops(block=b1)
v14, v15, v16, v17 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l18, l19, l20, l21 = sch.split(loop=l7, factors=[v14, v15, v16, v17], preserve_unit_iters=True, disable_predication=False)
v22, v23, v24, v25 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l26, l27, l28, l29 = sch.split(loop=l8, factors=[v22, v23, v24, v25], preserve_unit_iters=True, disable_predication=False)
v30, v31, v32, v33 = sch.sample_perfect_tile(loop=l9, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l34, l35, l36, l37 = sch.split(loop=l9, factors=[v30, v31, v32, v33], preserve_unit_iters=True, disable_predication=False)
v38, v39, v40, v41 = sch.sample_perfect_tile(loop=l10, n=4, max_innermost_factor=64, decision=[2, 8, 4, 32])
l42, l43, l44, l45 = sch.split(loop=l10, factors=[v38, v39, v40, v41], preserve_unit_iters=True, disable_predication=False)
v46, v47 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 1])
l48, l49 = sch.split(loop=l11, factors=[v46, v47], preserve_unit_iters=True, disable_predication=False)
v50, v51 = sch.sample_perfect_tile(loop=l12, n=2, max_innermost_factor=64, decision=[1, 1])
l52, l53 = sch.split(loop=l12, factors=[v50, v51], preserve_unit_iters=True, disable_predication=False)
v54, v55 = sch.sample_perfect_tile(loop=l13, n=2, max_innermost_factor=64, decision=[16, 64])
l56, l57 = sch.split(loop=l13, factors=[v54, v55], preserve_unit_iters=True, disable_predication=False)
sch.reorder(l18, l26, l34, l42, l19, l27, l35, l43, l48, l52, l56, l20, l28, l36, l44, l49, l53, l57, l21, l29, l37, l45)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.vectorize", ann_val=64)
v58 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v58)
2024-04-30 19:06:08 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(1024)), "float32"), p1: T.Buffer((T.int64(1), T.int64(1), T.int64(1024), T.int64(2048)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), p3: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), p4: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), p5: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 96, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            conv2d_nhwc = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)))
            for nn_0, yy_0, xx_0, ff_0, nn_1, yy_1, xx_1, ff_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(8)):
                for ry_0, rx_0, rc_0, nn_2, yy_2, xx_2, ff_2, ry_1, rx_1, rc_1, nn_3, yy_3, xx_3, ff_3 in T.grid(T.int64(1), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(32)):
                    with T.block("conv2d_nhwc"):
                        v_nn = T.axis.spatial(T.int64(1), nn_0 + nn_1 + nn_2 + nn_3)
                        v_yy = T.axis.spatial(T.int64(1), yy_0 + yy_1 + yy_2 + yy_3)
                        v_xx = T.axis.spatial(T.int64(1), xx_0 + xx_1 + xx_2 + xx_3)
                        v_ff = T.axis.spatial(T.int64(2048), ff_0 * T.int64(1024) + ff_1 * T.int64(128) + ff_2 * T.int64(32) + ff_3)
                        v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1)
                        v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1)
                        v_rc = T.axis.reduce(T.int64(1024), rc_0 * T.int64(64) + rc_1)
                        T.reads(p0[v_nn, v_yy * T.int64(2) + v_ry, v_xx * T.int64(2) + v_rx, v_rc], p1[v_ry, v_rx, v_rc, v_ff])
                        T.writes(conv2d_nhwc[v_nn, v_yy, v_xx, v_ff])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = T.float32(0)
                        conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] + p0[v_nn, v_yy * T.int64(2) + v_ry, v_xx * T.int64(2) + v_rx, v_rc] * p1[v_ry, v_rx, v_rc, v_ff]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(128)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1, v_ax2 = T.axis.remap("SSS", [ax0, ax1, ax2])
                        v_ax3 = T.axis.spatial(T.int64(2048), ff_0 * T.int64(1024) + ff_1 * T.int64(128) + ax3)
                        T.reads(conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, v_ax2, v_ax3], p3[v_ax0, v_ax1, v_ax2, v_ax3], p4[v_ax0, v_ax1, v_ax2, v_ax3], p5[v_ax0, v_ax1, v_ax2, v_ax3])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max((conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, v_ax2, v_ax3]) * p3[v_ax0, v_ax1, v_ax2, v_ax3] + p4[v_ax0, v_ax1, v_ax2, v_ax3] + p5[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nhwc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_multiply", func_name="main")
b4 = sch.get_block(name="T_add_1", func_name="main")
b5 = sch.get_block(name="T_add_2", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b5)
sch.compute_inline(block=b4)
sch.compute_inline(block=b3)
sch.compute_inline(block=b2)
sch.compute_inline(block=b0)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l7, l8, l9, l10, l11, l12, l13 = sch.get_loops(block=b1)
v14, v15, v16, v17 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l18, l19, l20, l21 = sch.split(loop=l7, factors=[v14, v15, v16, v17], preserve_unit_iters=True, disable_predication=False)
v22, v23, v24, v25 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l26, l27, l28, l29 = sch.split(loop=l8, factors=[v22, v23, v24, v25], preserve_unit_iters=True, disable_predication=False)
v30, v31, v32, v33 = sch.sample_perfect_tile(loop=l9, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l34, l35, l36, l37 = sch.split(loop=l9, factors=[v30, v31, v32, v33], preserve_unit_iters=True, disable_predication=False)
v38, v39, v40, v41 = sch.sample_perfect_tile(loop=l10, n=4, max_innermost_factor=64, decision=[2, 8, 4, 32])
l42, l43, l44, l45 = sch.split(loop=l10, factors=[v38, v39, v40, v41], preserve_unit_iters=True, disable_predication=False)
v46, v47 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 1])
l48, l49 = sch.split(loop=l11, factors=[v46, v47], preserve_unit_iters=True, disable_predication=False)
v50, v51 = sch.sample_perfect_tile(loop=l12, n=2, max_innermost_factor=64, decision=[1, 1])
l52, l53 = sch.split(loop=l12, factors=[v50, v51], preserve_unit_iters=True, disable_predication=False)
v54, v55 = sch.sample_perfect_tile(loop=l13, n=2, max_innermost_factor=64, decision=[16, 64])
l56, l57 = sch.split(loop=l13, factors=[v54, v55], preserve_unit_iters=True, disable_predication=False)
sch.reorder(l18, l26, l34, l42, l19, l27, l35, l43, l48, l52, l56, l20, l28, l36, l44, l49, l53, l57, l21, l29, l37, l45)
b58, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b58, loop=l43, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.vectorize", ann_val=64)
v59 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v59)
2024-04-30 19:06:08 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(1024)), "float32"), p1: T.Buffer((T.int64(1), T.int64(1), T.int64(1024), T.int64(2048)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), p3: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), p4: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), p5: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 96, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            conv2d_nhwc = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)))
            for nn_0, yy_0, xx_0, ff_0 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                for nn_1, yy_1, xx_1, ff_1, ry_0, rx_0, rc_0, nn_2, yy_2, xx_2, ff_2, ry_1, rx_1, rc_1, nn_3, yy_3, xx_3, ff_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(32)):
                    with T.block("conv2d_nhwc"):
                        v_nn = T.axis.spatial(T.int64(1), nn_0 + nn_1 + nn_2 + nn_3)
                        v_yy = T.axis.spatial(T.int64(1), yy_0 + yy_1 + yy_2 + yy_3)
                        v_xx = T.axis.spatial(T.int64(1), xx_0 + xx_1 + xx_2 + xx_3)
                        v_ff = T.axis.spatial(T.int64(2048), ff_0 * T.int64(1024) + ff_1 * T.int64(128) + ff_2 * T.int64(32) + ff_3)
                        v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1)
                        v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1)
                        v_rc = T.axis.reduce(T.int64(1024), rc_0 * T.int64(64) + rc_1)
                        T.reads(p0[v_nn, v_yy * T.int64(2) + v_ry, v_xx * T.int64(2) + v_rx, v_rc], p1[v_ry, v_rx, v_rc, v_ff])
                        T.writes(conv2d_nhwc[v_nn, v_yy, v_xx, v_ff])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = T.float32(0)
                        conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] + p0[v_nn, v_yy * T.int64(2) + v_ry, v_xx * T.int64(2) + v_rx, v_rc] * p1[v_ry, v_rx, v_rc, v_ff]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1024)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1, v_ax2 = T.axis.remap("SSS", [ax0, ax1, ax2])
                        v_ax3 = T.axis.spatial(T.int64(2048), ff_0 * T.int64(1024) + ax3)
                        T.reads(conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, v_ax2, v_ax3], p3[v_ax0, v_ax1, v_ax2, v_ax3], p4[v_ax0, v_ax1, v_ax2, v_ax3], p5[v_ax0, v_ax1, v_ax2, v_ax3])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max((conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, v_ax2, v_ax3]) * p3[v_ax0, v_ax1, v_ax2, v_ax3] + p4[v_ax0, v_ax1, v_ax2, v_ax3] + p5[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nhwc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_multiply", func_name="main")
b4 = sch.get_block(name="T_add_1", func_name="main")
b5 = sch.get_block(name="T_add_2", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b5)
sch.compute_inline(block=b4)
sch.compute_inline(block=b3)
sch.compute_inline(block=b2)
sch.compute_inline(block=b0)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l7, l8, l9, l10, l11, l12, l13 = sch.get_loops(block=b1)
v14, v15, v16, v17 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l18, l19, l20, l21 = sch.split(loop=l7, factors=[v14, v15, v16, v17], preserve_unit_iters=True, disable_predication=False)
v22, v23, v24, v25 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l26, l27, l28, l29 = sch.split(loop=l8, factors=[v22, v23, v24, v25], preserve_unit_iters=True, disable_predication=False)
v30, v31, v32, v33 = sch.sample_perfect_tile(loop=l9, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l34, l35, l36, l37 = sch.split(loop=l9, factors=[v30, v31, v32, v33], preserve_unit_iters=True, disable_predication=False)
v38, v39, v40, v41 = sch.sample_perfect_tile(loop=l10, n=4, max_innermost_factor=64, decision=[2, 8, 4, 32])
l42, l43, l44, l45 = sch.split(loop=l10, factors=[v38, v39, v40, v41], preserve_unit_iters=True, disable_predication=False)
v46, v47 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 1])
l48, l49 = sch.split(loop=l11, factors=[v46, v47], preserve_unit_iters=True, disable_predication=False)
v50, v51 = sch.sample_perfect_tile(loop=l12, n=2, max_innermost_factor=64, decision=[1, 1])
l52, l53 = sch.split(loop=l12, factors=[v50, v51], preserve_unit_iters=True, disable_predication=False)
v54, v55 = sch.sample_perfect_tile(loop=l13, n=2, max_innermost_factor=64, decision=[16, 64])
l56, l57 = sch.split(loop=l13, factors=[v54, v55], preserve_unit_iters=True, disable_predication=False)
sch.reorder(l18, l26, l34, l42, l19, l27, l35, l43, l48, l52, l56, l20, l28, l36, l44, l49, l53, l57, l21, l29, l37, l45)
b58, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b58, loop=l42, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.vectorize", ann_val=64)
v59 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v59)
2024-04-30 19:13:55 [INFO] [task_scheduler.cc:160] Initializing Task #24: "fused_nn_conv2d_add_multiply_add_add_nn_relu_6"
2024-04-30 19:13:55 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(1024)), "float32"), p1: T.Buffer((T.int64(1), T.int64(1), T.int64(1024), T.int64(2048)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), p3: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), p4: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), p5: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        pad_temp = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(1024)))
        conv2d_nhwc = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)))
        T_multiply = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)))
        T_add_1 = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)))
        T_add_2 = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(1024)):
            with T.block("pad_temp"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2, v_i3])
                T.writes(pad_temp[v_i0, v_i1, v_i2, v_i3])
                pad_temp[v_i0, v_i1, v_i2, v_i3] = p0[v_i0, v_i1, v_i2, v_i3]
        for nn, yy, xx, ff, ry, rx, rc in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2048), T.int64(1), T.int64(1), T.int64(1024)):
            with T.block("conv2d_nhwc"):
                v_nn, v_yy, v_xx, v_ff, v_ry, v_rx, v_rc = T.axis.remap("SSSSRRR", [nn, yy, xx, ff, ry, rx, rc])
                T.reads(pad_temp[v_nn, v_yy * T.int64(2) + v_ry, v_xx * T.int64(2) + v_rx, v_rc], p1[v_ry, v_rx, v_rc, v_ff])
                T.writes(conv2d_nhwc[v_nn, v_yy, v_xx, v_ff])
                with T.init():
                    conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = T.float32(0)
                conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] + pad_temp[v_nn, v_yy * T.int64(2) + v_ry, v_xx * T.int64(2) + v_rx, v_rc] * p1[v_ry, v_rx, v_rc, v_ff]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2048)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, v_ax2, v_ax3]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2048)):
            with T.block("T_multiply"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3], p3[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_multiply[v_ax0, v_ax1, v_ax2, v_ax3])
                T_multiply[v_ax0, v_ax1, v_ax2, v_ax3] = T_add[v_ax0, v_ax1, v_ax2, v_ax3] * p3[v_ax0, v_ax1, v_ax2, v_ax3]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2048)):
            with T.block("T_add_1"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_multiply[v_ax0, v_ax1, v_ax2, v_ax3], p4[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_add_1[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add_1[v_ax0, v_ax1, v_ax2, v_ax3] = T_multiply[v_ax0, v_ax1, v_ax2, v_ax3] + p4[v_ax0, v_ax1, v_ax2, v_ax3]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2048)):
            with T.block("T_add_2"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add_1[v_ax0, v_ax1, v_ax2, v_ax3], p5[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_add_2[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add_2[v_ax0, v_ax1, v_ax2, v_ax3] = T_add_1[v_ax0, v_ax1, v_ax2, v_ax3] + p5[v_ax0, v_ax1, v_ax2, v_ax3]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2048)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add_2[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add_2[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-04-30 19:13:55 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-30 19:13:55 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(1024)), "float32"), p1: T.Buffer((T.int64(1), T.int64(1), T.int64(1024), T.int64(2048)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), p3: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), p4: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), p5: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 96, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            conv2d_nhwc = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)))
            for nn_0, yy_0, xx_0, ff_0, nn_1, yy_1, xx_1, ff_1, ry_0, rx_0, rc_0, nn_2, yy_2, xx_2, ff_2, ry_1, rx_1, rc_1, nn_3, yy_3, xx_3, ff_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(512), T.int64(1), T.int64(1), T.int64(1), T.int64(512), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(4)):
                with T.block("conv2d_nhwc"):
                    v_nn = T.axis.spatial(T.int64(1), nn_0 + nn_1 + nn_2 + nn_3)
                    v_yy = T.axis.spatial(T.int64(1), yy_0 + yy_1 + yy_2 + yy_3)
                    v_xx = T.axis.spatial(T.int64(1), xx_0 + xx_1 + xx_2 + xx_3)
                    v_ff = T.axis.spatial(T.int64(2048), ff_0 * T.int64(2048) + ff_1 * T.int64(2048) + ff_2 * T.int64(4) + ff_3)
                    v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1)
                    v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1)
                    v_rc = T.axis.reduce(T.int64(1024), rc_0 * T.int64(2) + rc_1)
                    T.reads(p0[v_nn, v_yy * T.int64(2) + v_ry, v_xx * T.int64(2) + v_rx, v_rc], p1[v_ry, v_rx, v_rc, v_ff])
                    T.writes(conv2d_nhwc[v_nn, v_yy, v_xx, v_ff])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = T.float32(0)
                    conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] + p0[v_nn, v_yy * T.int64(2) + v_ry, v_xx * T.int64(2) + v_rx, v_rc] * p1[v_ry, v_rx, v_rc, v_ff]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2048)):
                with T.block("T_relu"):
                    v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                    T.reads(conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, v_ax2, v_ax3], p3[v_ax0, v_ax1, v_ax2, v_ax3], p4[v_ax0, v_ax1, v_ax2, v_ax3], p5[v_ax0, v_ax1, v_ax2, v_ax3])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max((conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, v_ax2, v_ax3]) * p3[v_ax0, v_ax1, v_ax2, v_ax3] + p4[v_ax0, v_ax1, v_ax2, v_ax3] + p5[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nhwc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_multiply", func_name="main")
b4 = sch.get_block(name="T_add_1", func_name="main")
b5 = sch.get_block(name="T_add_2", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b5)
sch.compute_inline(block=b4)
sch.compute_inline(block=b3)
sch.compute_inline(block=b2)
sch.compute_inline(block=b0)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l7, l8, l9, l10, l11, l12, l13 = sch.get_loops(block=b1)
v14, v15, v16, v17 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l18, l19, l20, l21 = sch.split(loop=l7, factors=[v14, v15, v16, v17], preserve_unit_iters=True, disable_predication=False)
v22, v23, v24, v25 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l26, l27, l28, l29 = sch.split(loop=l8, factors=[v22, v23, v24, v25], preserve_unit_iters=True, disable_predication=False)
v30, v31, v32, v33 = sch.sample_perfect_tile(loop=l9, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l34, l35, l36, l37 = sch.split(loop=l9, factors=[v30, v31, v32, v33], preserve_unit_iters=True, disable_predication=False)
v38, v39, v40, v41 = sch.sample_perfect_tile(loop=l10, n=4, max_innermost_factor=64, decision=[1, 1, 512, 4])
l42, l43, l44, l45 = sch.split(loop=l10, factors=[v38, v39, v40, v41], preserve_unit_iters=True, disable_predication=False)
v46, v47 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 1])
l48, l49 = sch.split(loop=l11, factors=[v46, v47], preserve_unit_iters=True, disable_predication=False)
v50, v51 = sch.sample_perfect_tile(loop=l12, n=2, max_innermost_factor=64, decision=[1, 1])
l52, l53 = sch.split(loop=l12, factors=[v50, v51], preserve_unit_iters=True, disable_predication=False)
v54, v55 = sch.sample_perfect_tile(loop=l13, n=2, max_innermost_factor=64, decision=[512, 2])
l56, l57 = sch.split(loop=l13, factors=[v54, v55], preserve_unit_iters=True, disable_predication=False)
sch.reorder(l18, l26, l34, l42, l19, l27, l35, l43, l48, l52, l56, l20, l28, l36, l44, l49, l53, l57, l21, l29, l37, l45)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.vectorize", ann_val=64)
v58 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v58)
2024-04-30 19:13:55 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(1024)), "float32"), p1: T.Buffer((T.int64(1), T.int64(1), T.int64(1024), T.int64(2048)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), p3: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), p4: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), p5: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 96, "meta_schedule.unroll_explicit": 64, "meta_schedule.vectorize": 64})
            conv2d_nhwc = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)))
            for nn_0, yy_0, xx_0, ff_0, nn_1, yy_1, xx_1, ff_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                for ry_0, rx_0, rc_0, nn_2, yy_2, xx_2, ff_2, ry_1, rx_1, rc_1, nn_3, yy_3, xx_3, ff_3 in T.grid(T.int64(1), T.int64(1), T.int64(512), T.int64(1), T.int64(1), T.int64(1), T.int64(512), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(4)):
                    with T.block("conv2d_nhwc"):
                        v_nn = T.axis.spatial(T.int64(1), nn_0 + nn_1 + nn_2 + nn_3)
                        v_yy = T.axis.spatial(T.int64(1), yy_0 + yy_1 + yy_2 + yy_3)
                        v_xx = T.axis.spatial(T.int64(1), xx_0 + xx_1 + xx_2 + xx_3)
                        v_ff = T.axis.spatial(T.int64(2048), ff_0 * T.int64(2048) + ff_1 * T.int64(2048) + ff_2 * T.int64(4) + ff_3)
                        v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1)
                        v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1)
                        v_rc = T.axis.reduce(T.int64(1024), rc_0 * T.int64(2) + rc_1)
                        T.reads(p0[v_nn, v_yy * T.int64(2) + v_ry, v_xx * T.int64(2) + v_rx, v_rc], p1[v_ry, v_rx, v_rc, v_ff])
                        T.writes(conv2d_nhwc[v_nn, v_yy, v_xx, v_ff])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = T.float32(0)
                        conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] + p0[v_nn, v_yy * T.int64(2) + v_ry, v_xx * T.int64(2) + v_rx, v_rc] * p1[v_ry, v_rx, v_rc, v_ff]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2048)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                        T.reads(conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, v_ax2, v_ax3], p3[v_ax0, v_ax1, v_ax2, v_ax3], p4[v_ax0, v_ax1, v_ax2, v_ax3], p5[v_ax0, v_ax1, v_ax2, v_ax3])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max((conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, v_ax2, v_ax3]) * p3[v_ax0, v_ax1, v_ax2, v_ax3] + p4[v_ax0, v_ax1, v_ax2, v_ax3] + p5[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nhwc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_multiply", func_name="main")
b4 = sch.get_block(name="T_add_1", func_name="main")
b5 = sch.get_block(name="T_add_2", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b5)
sch.compute_inline(block=b4)
sch.compute_inline(block=b3)
sch.compute_inline(block=b2)
sch.compute_inline(block=b0)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l7, l8, l9, l10, l11, l12, l13 = sch.get_loops(block=b1)
v14, v15, v16, v17 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l18, l19, l20, l21 = sch.split(loop=l7, factors=[v14, v15, v16, v17], preserve_unit_iters=True, disable_predication=False)
v22, v23, v24, v25 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l26, l27, l28, l29 = sch.split(loop=l8, factors=[v22, v23, v24, v25], preserve_unit_iters=True, disable_predication=False)
v30, v31, v32, v33 = sch.sample_perfect_tile(loop=l9, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l34, l35, l36, l37 = sch.split(loop=l9, factors=[v30, v31, v32, v33], preserve_unit_iters=True, disable_predication=False)
v38, v39, v40, v41 = sch.sample_perfect_tile(loop=l10, n=4, max_innermost_factor=64, decision=[1, 1, 512, 4])
l42, l43, l44, l45 = sch.split(loop=l10, factors=[v38, v39, v40, v41], preserve_unit_iters=True, disable_predication=False)
v46, v47 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 1])
l48, l49 = sch.split(loop=l11, factors=[v46, v47], preserve_unit_iters=True, disable_predication=False)
v50, v51 = sch.sample_perfect_tile(loop=l12, n=2, max_innermost_factor=64, decision=[1, 1])
l52, l53 = sch.split(loop=l12, factors=[v50, v51], preserve_unit_iters=True, disable_predication=False)
v54, v55 = sch.sample_perfect_tile(loop=l13, n=2, max_innermost_factor=64, decision=[512, 2])
l56, l57 = sch.split(loop=l13, factors=[v54, v55], preserve_unit_iters=True, disable_predication=False)
sch.reorder(l18, l26, l34, l42, l19, l27, l35, l43, l48, l52, l56, l20, l28, l36, l44, l49, l53, l57, l21, l29, l37, l45)
b58, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b58, loop=l43, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.vectorize", ann_val=64)
v59 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v59)
2024-04-30 19:13:55 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(1024)), "float32"), p1: T.Buffer((T.int64(1), T.int64(1), T.int64(1024), T.int64(2048)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), p3: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), p4: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), p5: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 96, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            conv2d_nhwc = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(2048)))
            for nn_0, yy_0, xx_0, ff_0 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                for nn_1, yy_1, xx_1, ff_1, ry_0, rx_0, rc_0, nn_2, yy_2, xx_2, ff_2, ry_1, rx_1, rc_1, nn_3, yy_3, xx_3, ff_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(512), T.int64(1), T.int64(1), T.int64(1), T.int64(512), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(4)):
                    with T.block("conv2d_nhwc"):
                        v_nn = T.axis.spatial(T.int64(1), nn_0 + nn_1 + nn_2 + nn_3)
                        v_yy = T.axis.spatial(T.int64(1), yy_0 + yy_1 + yy_2 + yy_3)
                        v_xx = T.axis.spatial(T.int64(1), xx_0 + xx_1 + xx_2 + xx_3)
                        v_ff = T.axis.spatial(T.int64(2048), ff_0 * T.int64(2048) + ff_1 * T.int64(2048) + ff_2 * T.int64(4) + ff_3)
                        v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1)
                        v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1)
                        v_rc = T.axis.reduce(T.int64(1024), rc_0 * T.int64(2) + rc_1)
                        T.reads(p0[v_nn, v_yy * T.int64(2) + v_ry, v_xx * T.int64(2) + v_rx, v_rc], p1[v_ry, v_rx, v_rc, v_ff])
                        T.writes(conv2d_nhwc[v_nn, v_yy, v_xx, v_ff])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = T.float32(0)
                        conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] + p0[v_nn, v_yy * T.int64(2) + v_ry, v_xx * T.int64(2) + v_rx, v_rc] * p1[v_ry, v_rx, v_rc, v_ff]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2048)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                        T.reads(conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, v_ax2, v_ax3], p3[v_ax0, v_ax1, v_ax2, v_ax3], p4[v_ax0, v_ax1, v_ax2, v_ax3], p5[v_ax0, v_ax1, v_ax2, v_ax3])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max((conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, v_ax2, v_ax3]) * p3[v_ax0, v_ax1, v_ax2, v_ax3] + p4[v_ax0, v_ax1, v_ax2, v_ax3] + p5[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nhwc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_multiply", func_name="main")
b4 = sch.get_block(name="T_add_1", func_name="main")
b5 = sch.get_block(name="T_add_2", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b5)
sch.compute_inline(block=b4)
sch.compute_inline(block=b3)
sch.compute_inline(block=b2)
sch.compute_inline(block=b0)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l7, l8, l9, l10, l11, l12, l13 = sch.get_loops(block=b1)
v14, v15, v16, v17 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l18, l19, l20, l21 = sch.split(loop=l7, factors=[v14, v15, v16, v17], preserve_unit_iters=True, disable_predication=False)
v22, v23, v24, v25 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l26, l27, l28, l29 = sch.split(loop=l8, factors=[v22, v23, v24, v25], preserve_unit_iters=True, disable_predication=False)
v30, v31, v32, v33 = sch.sample_perfect_tile(loop=l9, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l34, l35, l36, l37 = sch.split(loop=l9, factors=[v30, v31, v32, v33], preserve_unit_iters=True, disable_predication=False)
v38, v39, v40, v41 = sch.sample_perfect_tile(loop=l10, n=4, max_innermost_factor=64, decision=[1, 1, 512, 4])
l42, l43, l44, l45 = sch.split(loop=l10, factors=[v38, v39, v40, v41], preserve_unit_iters=True, disable_predication=False)
v46, v47 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 1])
l48, l49 = sch.split(loop=l11, factors=[v46, v47], preserve_unit_iters=True, disable_predication=False)
v50, v51 = sch.sample_perfect_tile(loop=l12, n=2, max_innermost_factor=64, decision=[1, 1])
l52, l53 = sch.split(loop=l12, factors=[v50, v51], preserve_unit_iters=True, disable_predication=False)
v54, v55 = sch.sample_perfect_tile(loop=l13, n=2, max_innermost_factor=64, decision=[512, 2])
l56, l57 = sch.split(loop=l13, factors=[v54, v55], preserve_unit_iters=True, disable_predication=False)
sch.reorder(l18, l26, l34, l42, l19, l27, l35, l43, l48, l52, l56, l20, l28, l36, l44, l49, l53, l57, l21, l29, l37, l45)
b58, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b58, loop=l42, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.vectorize", ann_val=64)
v59 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v59)
2024-04-30 19:31:19 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 19:31:19 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-30 19:31:20 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x22a04568)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xdf9b628)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x13fc0f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x118c1588)]: 0 failure(s)
2024-04-30 19:31:20 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-30 19:31:21 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x22a04568)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xdf9b628)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x13fc0f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x118c1588)]: 0 failure(s)
2024-04-30 19:31:23 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x22a04568)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xdf9b628)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x13fc0f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x118c1588)]: 0 failure(s)
2024-04-30 19:31:24 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x22a04568)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xdf9b628)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x13fc0f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x118c1588)]: 0 failure(s)
2024-04-30 19:31:25 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x22a04568)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xdf9b628)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x13fc0f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x118c1588)]: 0 failure(s)
2024-04-30 19:31:26 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9983  0.9982  0.9981  0.9979  0.9977  0.9974  0.9970  0.9965  0.9959  0.9953  0.9952  0.9944  0.9944  0.9941  0.9935  0.9933
[17 : 32]:	0.9933  0.9925  0.9916  0.9893  0.9888  0.9882  0.9881  0.9877  0.9865  0.9861  0.9856  0.9853  0.9851  0.9845  0.9837  0.9825
[33 : 48]:	0.9817  0.9814  0.9809  0.9807  0.9806  0.9799  0.9798  0.9795  0.9795  0.9794  0.9789  0.9784  0.9779  0.9765  0.9761  0.9761
[49 : 64]:	0.9753  0.9753  0.9750  0.9746  0.9746  0.9736  0.9717  0.9717  0.9715  0.9710  0.9708  0.9707  0.9706  0.9705  0.9704  0.9688
2024-04-30 19:31:26 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 19:31:26 [INFO] [evolutionary_search.cc:730] Sending 63 candidates(s) for measurement
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #1: GFLOPs: 7.8611. Time: 534.8547 us. Best GFLOPs: 7.8611
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #2: GFLOPs: 6.2898. Time: 668.4691 us. Best GFLOPs: 7.8611
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #3: GFLOPs: 4.9153. Time: 855.3956 us. Best GFLOPs: 7.8611
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #4: GFLOPs: 2.0785. Time: 2022.8836 us. Best GFLOPs: 7.8611
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #5: GFLOPs: 4.9147. Time: 855.5030 us. Best GFLOPs: 7.8611
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #6: GFLOPs: 3.1337. Time: 1341.7158 us. Best GFLOPs: 7.8611
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #7: GFLOPs: 6.9160. Time: 607.9469 us. Best GFLOPs: 7.8611
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #8: GFLOPs: 0.0848. Time: 49604.7367 us. Best GFLOPs: 7.8611
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #9: GFLOPs: 2.1317. Time: 1972.4313 us. Best GFLOPs: 7.8611
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #10: GFLOPs: 6.5007. Time: 646.7843 us. Best GFLOPs: 7.8611
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #11: GFLOPs: 4.1373. Time: 1016.2502 us. Best GFLOPs: 7.8611
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #12: GFLOPs: 3.2246. Time: 1303.8890 us. Best GFLOPs: 7.8611
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #13: GFLOPs: 5.5732. Time: 754.4220 us. Best GFLOPs: 7.8611
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #14: GFLOPs: 4.2069. Time: 999.4291 us. Best GFLOPs: 7.8611
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #15: GFLOPs: 3.0222. Time: 1391.2152 us. Best GFLOPs: 7.8611
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #16: GFLOPs: 2.2012. Time: 1910.0767 us. Best GFLOPs: 7.8611
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #17: GFLOPs: 3.8730. Time: 1085.6115 us. Best GFLOPs: 7.8611
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #18: GFLOPs: 4.8573. Time: 865.6217 us. Best GFLOPs: 7.8611
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #19: GFLOPs: 3.5252. Time: 1192.7034 us. Best GFLOPs: 7.8611
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #20: GFLOPs: 1.5366. Time: 2736.2029 us. Best GFLOPs: 7.8611
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #21: GFLOPs: 4.3263. Time: 971.8633 us. Best GFLOPs: 7.8611
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #22: GFLOPs: 2.7276. Time: 1541.5022 us. Best GFLOPs: 7.8611
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #23: GFLOPs: 8.3993. Time: 500.5853 us. Best GFLOPs: 8.3993
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #24: GFLOPs: 6.8901. Time: 610.2275 us. Best GFLOPs: 8.3993
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #25: GFLOPs: 9.5662. Time: 439.5190 us. Best GFLOPs: 9.5662
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #26: GFLOPs: 4.5338. Time: 927.3855 us. Best GFLOPs: 9.5662
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #27: GFLOPs: 7.0203. Time: 598.9155 us. Best GFLOPs: 9.5662
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #28: GFLOPs: 4.9601. Time: 847.6713 us. Best GFLOPs: 9.5662
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #29: GFLOPs: 6.9834. Time: 602.0739 us. Best GFLOPs: 9.5662
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #30: GFLOPs: 5.6159. Time: 748.6882 us. Best GFLOPs: 9.5662
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #31: GFLOPs: 7.3602. Time: 571.2533 us. Best GFLOPs: 9.5662
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #32: GFLOPs: 2.2776. Time: 1846.0771 us. Best GFLOPs: 9.5662
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #33: GFLOPs: 5.5995. Time: 750.8768 us. Best GFLOPs: 9.5662
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #34: GFLOPs: 3.0941. Time: 1358.8713 us. Best GFLOPs: 9.5662
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #35: GFLOPs: 6.7186. Time: 625.8031 us. Best GFLOPs: 9.5662
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #36: GFLOPs: 5.7524. Time: 730.9219 us. Best GFLOPs: 9.5662
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #37: GFLOPs: 6.4528. Time: 651.5829 us. Best GFLOPs: 9.5662
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #38: GFLOPs: 6.8761. Time: 611.4683 us. Best GFLOPs: 9.5662
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #39: GFLOPs: 7.6494. Time: 549.6546 us. Best GFLOPs: 9.5662
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #40: GFLOPs: 5.4007. Time: 778.5207 us. Best GFLOPs: 9.5662
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #41: GFLOPs: 6.0236. Time: 698.0135 us. Best GFLOPs: 9.5662
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #42: GFLOPs: 4.9537. Time: 848.7714 us. Best GFLOPs: 9.5662
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #43: GFLOPs: 7.2182. Time: 582.4955 us. Best GFLOPs: 9.5662
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #44: GFLOPs: 5.2987. Time: 793.5014 us. Best GFLOPs: 9.5662
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #45: GFLOPs: 4.1405. Time: 1015.4792 us. Best GFLOPs: 9.5662
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #46: GFLOPs: 5.1142. Time: 822.1363 us. Best GFLOPs: 9.5662
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #47: GFLOPs: 4.5395. Time: 926.2210 us. Best GFLOPs: 9.5662
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #48: GFLOPs: 5.2123. Time: 806.6598 us. Best GFLOPs: 9.5662
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #49: GFLOPs: 6.2170. Time: 676.3033 us. Best GFLOPs: 9.5662
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #50: GFLOPs: 9.8649. Time: 426.2121 us. Best GFLOPs: 9.8649
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #51: GFLOPs: 4.9740. Time: 845.2967 us. Best GFLOPs: 9.8649
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #52: GFLOPs: 11.4832. Time: 366.1480 us. Best GFLOPs: 11.4832
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #53: GFLOPs: 10.3902. Time: 404.6645 us. Best GFLOPs: 11.4832
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #54: GFLOPs: 6.2664. Time: 670.9669 us. Best GFLOPs: 11.4832
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #55: GFLOPs: 6.1978. Time: 678.3956 us. Best GFLOPs: 11.4832
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #56: GFLOPs: 7.8575. Time: 535.1001 us. Best GFLOPs: 11.4832
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #57: GFLOPs: 7.8123. Time: 538.1920 us. Best GFLOPs: 11.4832
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #58: GFLOPs: 6.9028. Time: 609.1057 us. Best GFLOPs: 11.4832
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #59: GFLOPs: 6.1665. Time: 681.8330 us. Best GFLOPs: 11.4832
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #60: GFLOPs: 6.1447. Time: 684.2609 us. Best GFLOPs: 11.4832
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #61: GFLOPs: 4.4159. Time: 952.1400 us. Best GFLOPs: 11.4832
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #62: GFLOPs: 4.6037. Time: 913.3053 us. Best GFLOPs: 11.4832
2024-04-30 19:36:38 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #63: GFLOPs: 9.6576. Time: 435.3629 us. Best GFLOPs: 11.4832
2024-04-30 19:46:02 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 19:46:03 [INFO] [evolutionary_search.cc:715] Picked top 63 candidate(s) from database
2024-04-30 19:46:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x22a04568)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xdf9b628)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x13fc0f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x118c1588)]: 0 failure(s)
2024-04-30 19:46:04 [INFO] [evolutionary_search.cc:723] Sampled 449 candidate(s)
2024-04-30 19:46:07 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x22a04568)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xdf9b628)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x13fc0f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x118c1588)]: 0 failure(s)
2024-04-30 19:46:10 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x22a04568)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xdf9b628)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x13fc0f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x118c1588)]: 0 failure(s)
2024-04-30 19:46:14 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x22a04568)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xdf9b628)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x13fc0f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x118c1588)]: 0 failure(s)
2024-04-30 19:46:18 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x22a04568)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xdf9b628)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x13fc0f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x118c1588)]: 0 failure(s)
2024-04-30 19:46:20 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9283  0.9258  0.8954  0.8947  0.8719  0.8719  0.8696  0.8643  0.8617  0.8586  0.8568  0.8564  0.8564  0.8553  0.8553  0.8550
[17 : 32]:	0.8550  0.8539  0.8518  0.8515  0.8515  0.8489  0.8484  0.8484  0.8476  0.8468  0.8468  0.8456  0.8456  0.8455  0.8453  0.8453
[33 : 48]:	0.8426  0.8426  0.8420  0.8411  0.8408  0.8408  0.8401  0.8401  0.8398  0.8398  0.8387  0.8383  0.8380  0.8377  0.8346  0.8333
[49 : 64]:	0.8313  0.8313  0.8302  0.8300  0.8297  0.8297  0.8297  0.8297  0.8297  0.8291  0.8287  0.8266  0.8257  0.8246  0.8238  0.8216
2024-04-30 19:46:20 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 19:46:20 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #64: GFLOPs: 14.1948. Time: 296.2033 us. Best GFLOPs: 14.1948
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #65: GFLOPs: 16.4923. Time: 254.9392 us. Best GFLOPs: 16.4923
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #66: GFLOPs: 16.7229. Time: 251.4240 us. Best GFLOPs: 16.7229
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #67: GFLOPs: 15.6767. Time: 268.2030 us. Best GFLOPs: 16.7229
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #68: GFLOPs: 21.1023. Time: 199.2455 us. Best GFLOPs: 21.1023
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #69: GFLOPs: 21.2872. Time: 197.5151 us. Best GFLOPs: 21.2872
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #70: GFLOPs: 18.5169. Time: 227.0651 us. Best GFLOPs: 21.2872
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #71: GFLOPs: 20.4489. Time: 205.6120 us. Best GFLOPs: 21.2872
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #72: GFLOPs: 25.1191. Time: 167.3843 us. Best GFLOPs: 25.1191
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #73: GFLOPs: 24.7415. Time: 169.9390 us. Best GFLOPs: 25.1191
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #74: GFLOPs: 24.7253. Time: 170.0502 us. Best GFLOPs: 25.1191
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #75: GFLOPs: 25.0645. Time: 167.7489 us. Best GFLOPs: 25.1191
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #76: GFLOPs: 24.3504. Time: 172.6682 us. Best GFLOPs: 25.1191
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #77: GFLOPs: 22.8977. Time: 183.6230 us. Best GFLOPs: 25.1191
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #78: GFLOPs: 22.0780. Time: 190.4404 us. Best GFLOPs: 25.1191
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #79: GFLOPs: 21.7940. Time: 192.9225 us. Best GFLOPs: 25.1191
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #80: GFLOPs: 25.1486. Time: 167.1878 us. Best GFLOPs: 25.1486
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #81: GFLOPs: 27.1092. Time: 155.0964 us. Best GFLOPs: 27.1092
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #82: GFLOPs: 21.6004. Time: 194.6513 us. Best GFLOPs: 27.1092
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #83: GFLOPs: 25.7808. Time: 163.0882 us. Best GFLOPs: 27.1092
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #84: GFLOPs: 21.4733. Time: 195.8032 us. Best GFLOPs: 27.1092
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #85: GFLOPs: 21.1931. Time: 198.3921 us. Best GFLOPs: 27.1092
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #86: GFLOPs: 23.8208. Time: 176.5075 us. Best GFLOPs: 27.1092
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #87: GFLOPs: 26.1608. Time: 160.7191 us. Best GFLOPs: 27.1092
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #88: GFLOPs: 25.3211. Time: 166.0492 us. Best GFLOPs: 27.1092
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #89: GFLOPs: 20.3675. Time: 206.4339 us. Best GFLOPs: 27.1092
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #90: GFLOPs: 22.0983. Time: 190.2652 us. Best GFLOPs: 27.1092
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #91: GFLOPs: 21.7599. Time: 193.2240 us. Best GFLOPs: 27.1092
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #92: GFLOPs: 21.7291. Time: 193.4983 us. Best GFLOPs: 27.1092
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #93: GFLOPs: 25.4933. Time: 164.9275 us. Best GFLOPs: 27.1092
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #94: GFLOPs: 27.4731. Time: 153.0419 us. Best GFLOPs: 27.4731
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #95: GFLOPs: 22.4949. Time: 186.9112 us. Best GFLOPs: 27.4731
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #96: GFLOPs: 22.2340. Time: 189.1039 us. Best GFLOPs: 27.4731
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #97: GFLOPs: 26.4152. Time: 159.1713 us. Best GFLOPs: 27.4731
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #98: GFLOPs: 24.1039. Time: 174.4338 us. Best GFLOPs: 27.4731
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #99: GFLOPs: 18.7158. Time: 224.6525 us. Best GFLOPs: 27.4731
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #100: GFLOPs: 25.7530. Time: 163.2641 us. Best GFLOPs: 27.4731
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #101: GFLOPs: 22.2135. Time: 189.2786 us. Best GFLOPs: 27.4731
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #102: GFLOPs: 23.5652. Time: 178.4218 us. Best GFLOPs: 27.4731
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #103: GFLOPs: 23.1476. Time: 181.6403 us. Best GFLOPs: 27.4731
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #104: GFLOPs: 21.3818. Time: 196.6412 us. Best GFLOPs: 27.4731
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #105: GFLOPs: 20.1536. Time: 208.6251 us. Best GFLOPs: 27.4731
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #106: GFLOPs: 22.7435. Time: 184.8683 us. Best GFLOPs: 27.4731
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #107: GFLOPs: 20.6944. Time: 203.1730 us. Best GFLOPs: 27.4731
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #108: GFLOPs: 23.0933. Time: 182.0678 us. Best GFLOPs: 27.4731
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #109: GFLOPs: 24.2732. Time: 173.2177 us. Best GFLOPs: 27.4731
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #110: GFLOPs: 16.6224. Time: 252.9444 us. Best GFLOPs: 27.4731
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #111: GFLOPs: 24.0297. Time: 174.9728 us. Best GFLOPs: 27.4731
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #112: GFLOPs: 25.6188. Time: 164.1193 us. Best GFLOPs: 27.4731
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #113: GFLOPs: 25.0521. Time: 167.8317 us. Best GFLOPs: 27.4731
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #114: GFLOPs: 21.0613. Time: 199.6337 us. Best GFLOPs: 27.4731
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #115: GFLOPs: 18.8755. Time: 222.7511 us. Best GFLOPs: 27.4731
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #116: GFLOPs: 24.5526. Time: 171.2465 us. Best GFLOPs: 27.4731
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #117: GFLOPs: 25.3559. Time: 165.8210 us. Best GFLOPs: 27.4731
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #118: GFLOPs: 20.2432. Time: 207.7020 us. Best GFLOPs: 27.4731
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #119: GFLOPs: 20.6118. Time: 203.9869 us. Best GFLOPs: 27.4731
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #120: GFLOPs: 21.9217. Time: 191.7983 us. Best GFLOPs: 27.4731
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #121: GFLOPs: 19.7230. Time: 213.1794 us. Best GFLOPs: 27.4731
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #122: GFLOPs: 23.0431. Time: 182.4642 us. Best GFLOPs: 27.4731
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #123: GFLOPs: 26.0350. Time: 161.4955 us. Best GFLOPs: 27.4731
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #124: GFLOPs: 22.8449. Time: 184.0474 us. Best GFLOPs: 27.4731
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #125: GFLOPs: 20.2031. Time: 208.1142 us. Best GFLOPs: 27.4731
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #126: GFLOPs: 5.4212. Time: 775.5797 us. Best GFLOPs: 27.4731
2024-04-30 19:46:45 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #127: GFLOPs: 8.4018. Time: 500.4318 us. Best GFLOPs: 27.4731
2024-04-30 20:01:42 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 20:01:42 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 20:01:43 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x22a04568)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xdf9b628)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x13fc0f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x118c1588)]: 0 failure(s)
2024-04-30 20:01:43 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-30 20:01:47 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x22a04568)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xdf9b628)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x13fc0f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x118c1588)]: 0 failure(s)
2024-04-30 20:01:50 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x22a04568)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xdf9b628)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x13fc0f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x118c1588)]: 0 failure(s)
2024-04-30 20:01:54 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x22a04568)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xdf9b628)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x13fc0f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x118c1588)]: 0 failure(s)
2024-04-30 20:01:57 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x22a04568)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xdf9b628)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x13fc0f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x118c1588)]: 0 failure(s)
2024-04-30 20:02:00 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9060  0.8903  0.8903  0.8889  0.8883  0.8883  0.8878  0.8865  0.8852  0.8852  0.8816  0.8796  0.8796  0.8796  0.8790  0.8790
[17 : 32]:	0.8764  0.8745  0.8745  0.8745  0.8744  0.8740  0.8736  0.8736  0.8729  0.8729  0.8729  0.8710  0.8709  0.8709  0.8667  0.8643
[33 : 48]:	0.8643  0.8623  0.8609  0.8593  0.8579  0.8570  0.8570  0.8558  0.8543  0.8543  0.8533  0.8533  0.8508  0.8508  0.8506  0.8506
[49 : 64]:	0.8503  0.8500  0.8500  0.8486  0.8486  0.8484  0.8481  0.8481  0.8479  0.8479  0.8479  0.8479  0.8479  0.8477  0.8477  0.8477
2024-04-30 20:02:00 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 20:02:00 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #128: GFLOPs: 13.5231. Time: 310.9156 us. Best GFLOPs: 27.4731
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #129: GFLOPs: 14.9175. Time: 281.8531 us. Best GFLOPs: 27.4731
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #130: GFLOPs: 16.1820. Time: 259.8284 us. Best GFLOPs: 27.4731
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #131: GFLOPs: 20.2933. Time: 207.1891 us. Best GFLOPs: 27.4731
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #132: GFLOPs: 14.8570. Time: 283.0015 us. Best GFLOPs: 27.4731
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #133: GFLOPs: 25.7657. Time: 163.1839 us. Best GFLOPs: 27.4731
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #134: GFLOPs: 16.2989. Time: 257.9653 us. Best GFLOPs: 27.4731
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #135: GFLOPs: 17.2160. Time: 244.2237 us. Best GFLOPs: 27.4731
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #136: GFLOPs: 15.2545. Time: 275.6268 us. Best GFLOPs: 27.4731
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #137: GFLOPs: 14.0936. Time: 298.3308 us. Best GFLOPs: 27.4731
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #138: GFLOPs: 11.6483. Time: 360.9586 us. Best GFLOPs: 27.4731
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #139: GFLOPs: 24.2517. Time: 173.3711 us. Best GFLOPs: 27.4731
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #140: GFLOPs: 25.1763. Time: 167.0043 us. Best GFLOPs: 27.4731
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #141: GFLOPs: 25.3108. Time: 166.1164 us. Best GFLOPs: 27.4731
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #142: GFLOPs: 21.7891. Time: 192.9656 us. Best GFLOPs: 27.4731
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #143: GFLOPs: 22.1770. Time: 189.5904 us. Best GFLOPs: 27.4731
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #144: GFLOPs: 20.5860. Time: 204.2429 us. Best GFLOPs: 27.4731
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #145: GFLOPs: 21.5881. Time: 194.7618 us. Best GFLOPs: 27.4731
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #146: GFLOPs: 19.0352. Time: 220.8827 us. Best GFLOPs: 27.4731
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #147: GFLOPs: 19.9402. Time: 210.8577 us. Best GFLOPs: 27.4731
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #148: GFLOPs: 24.9278. Time: 168.6692 us. Best GFLOPs: 27.4731
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #149: GFLOPs: 27.3472. Time: 153.7470 us. Best GFLOPs: 27.4731
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #150: GFLOPs: 19.3259. Time: 217.5598 us. Best GFLOPs: 27.4731
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #151: GFLOPs: 23.3114. Time: 180.3645 us. Best GFLOPs: 27.4731
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #152: GFLOPs: 21.9463. Time: 191.5836 us. Best GFLOPs: 27.4731
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #153: GFLOPs: 30.0392. Time: 139.9687 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #154: GFLOPs: 25.3448. Time: 165.8937 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #155: GFLOPs: 26.1907. Time: 160.5355 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #156: GFLOPs: 18.0023. Time: 233.5554 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #157: GFLOPs: 13.5974. Time: 309.2163 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #158: GFLOPs: 22.5124. Time: 186.7659 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #159: GFLOPs: 23.4017. Time: 179.6681 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #160: GFLOPs: 19.5935. Time: 214.5887 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #161: GFLOPs: 24.2155. Time: 173.6304 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #162: GFLOPs: 20.0598. Time: 209.6009 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #163: GFLOPs: 23.7701. Time: 176.8837 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #164: GFLOPs: 25.5296. Time: 164.6927 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #165: GFLOPs: 22.6667. Time: 185.4940 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #166: GFLOPs: 24.7197. Time: 170.0890 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #167: GFLOPs: 27.5890. Time: 152.3991 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #168: GFLOPs: 24.4161. Time: 172.2037 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #169: GFLOPs: 20.9969. Time: 200.2461 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #170: GFLOPs: 24.8993. Time: 168.8618 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #171: GFLOPs: 22.7324. Time: 184.9579 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #172: GFLOPs: 22.7823. Time: 184.5533 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #173: GFLOPs: 23.0602. Time: 182.3293 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #174: GFLOPs: 21.9963. Time: 191.1477 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #175: GFLOPs: 17.4975. Time: 240.2945 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #176: GFLOPs: 22.8073. Time: 184.3505 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #177: GFLOPs: 17.2610. Time: 243.5861 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #178: GFLOPs: 28.9449. Time: 145.2603 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #179: GFLOPs: 22.3618. Time: 188.0237 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #180: GFLOPs: 25.1231. Time: 167.3577 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #181: GFLOPs: 24.7823. Time: 169.6590 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #182: GFLOPs: 22.1840. Time: 189.5308 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #183: GFLOPs: 23.4948. Time: 178.9564 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #184: GFLOPs: 19.6039. Time: 214.4750 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #185: GFLOPs: 20.6579. Time: 203.5324 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #186: GFLOPs: 21.8274. Time: 192.6270 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #187: GFLOPs: 21.3649. Time: 196.7965 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #188: GFLOPs: 19.0756. Time: 220.4143 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #189: GFLOPs: 5.4267. Time: 774.7845 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #190: GFLOPs: 8.2003. Time: 512.7291 us. Best GFLOPs: 30.0392
2024-04-30 20:02:27 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #191: GFLOPs: 13.8804. Time: 302.9122 us. Best GFLOPs: 30.0392
2024-04-30 20:09:48 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 20:09:49 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 20:09:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x22a04568)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xdf9b628)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x13fc0f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x118c1588)]: 0 failure(s)
2024-04-30 20:09:50 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-30 20:09:52 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x22a04568)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xdf9b628)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x13fc0f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x118c1588)]: 0 failure(s)
2024-04-30 20:09:54 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x22a04568)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xdf9b628)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x13fc0f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x118c1588)]: 0 failure(s)
2024-04-30 20:09:57 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x22a04568)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xdf9b628)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x13fc0f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x118c1588)]: 0 failure(s)
2024-04-30 20:10:00 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x22a04568)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xdf9b628)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x13fc0f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x118c1588)]: 0 failure(s)
2024-04-30 20:10:02 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8105  0.8093  0.8093  0.8003  0.7988  0.7988  0.7977  0.7945  0.7916  0.7905  0.7857  0.7847  0.7847  0.7810  0.7790  0.7790
[17 : 32]:	0.7781  0.7766  0.7736  0.7727  0.7716  0.7715  0.7710  0.7678  0.7677  0.7672  0.7658  0.7655  0.7647  0.7642  0.7637  0.7635
[33 : 48]:	0.7622  0.7618  0.7616  0.7611  0.7578  0.7578  0.7571  0.7571  0.7571  0.7569  0.7547  0.7543  0.7531  0.7527  0.7503  0.7471
[49 : 64]:	0.7471  0.7467  0.7467  0.7453  0.7436  0.7409  0.7399  0.7399  0.7392  0.7392  0.7392  0.7389  0.7382  0.7356  0.7338  0.7301
2024-04-30 20:10:02 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 20:10:02 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #192: GFLOPs: 33.2039. Time: 126.6279 us. Best GFLOPs: 33.2039
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #193: GFLOPs: 45.6200. Time: 92.1646 us. Best GFLOPs: 45.6200
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #194: GFLOPs: 31.2054. Time: 134.7379 us. Best GFLOPs: 45.6200
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #195: GFLOPs: 31.3179. Time: 134.2538 us. Best GFLOPs: 45.6200
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #196: GFLOPs: 15.9365. Time: 263.8313 us. Best GFLOPs: 45.6200
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #197: GFLOPs: 35.8890. Time: 117.1542 us. Best GFLOPs: 45.6200
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #198: GFLOPs: 45.0959. Time: 93.2355 us. Best GFLOPs: 45.6200
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #199: GFLOPs: 35.5622. Time: 118.2309 us. Best GFLOPs: 45.6200
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #200: GFLOPs: 36.7016. Time: 114.5602 us. Best GFLOPs: 45.6200
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #201: GFLOPs: 46.2728. Time: 90.8644 us. Best GFLOPs: 46.2728
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #202: GFLOPs: 31.1033. Time: 135.1799 us. Best GFLOPs: 46.2728
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #203: GFLOPs: 37.5050. Time: 112.1063 us. Best GFLOPs: 46.2728
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #204: GFLOPs: 49.4141. Time: 85.0879 us. Best GFLOPs: 49.4141
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #205: GFLOPs: 35.7260. Time: 117.6885 us. Best GFLOPs: 49.4141
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #206: GFLOPs: 40.7292. Time: 103.2318 us. Best GFLOPs: 49.4141
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #207: GFLOPs: 50.4035. Time: 83.4177 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #208: GFLOPs: 30.6476. Time: 137.1901 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #209: GFLOPs: 29.9589. Time: 140.3439 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #210: GFLOPs: 44.8572. Time: 93.7318 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #211: GFLOPs: 41.5051. Time: 101.3019 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #212: GFLOPs: 42.1567. Time: 99.7360 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #213: GFLOPs: 41.0547. Time: 102.4132 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #214: GFLOPs: 44.3838. Time: 94.7314 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #215: GFLOPs: 35.5123. Time: 118.3969 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #216: GFLOPs: 41.9476. Time: 100.2332 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #217: GFLOPs: 36.3025. Time: 115.8198 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #218: GFLOPs: 31.8919. Time: 131.8375 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #219: GFLOPs: 38.0471. Time: 110.5088 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #220: GFLOPs: 38.6586. Time: 108.7608 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #221: GFLOPs: 45.6944. Time: 92.0144 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #222: GFLOPs: 44.6256. Time: 94.2183 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #223: GFLOPs: 36.9201. Time: 113.8823 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #224: GFLOPs: 42.4501. Time: 99.0468 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #225: GFLOPs: 21.6114. Time: 194.5523 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #226: GFLOPs: 35.5699. Time: 118.2052 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #227: GFLOPs: 22.1861. Time: 189.5123 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #228: GFLOPs: 33.8992. Time: 124.0307 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #229: GFLOPs: 36.1085. Time: 116.4419 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #230: GFLOPs: 36.1838. Time: 116.1998 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #231: GFLOPs: 36.5057. Time: 115.1750 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #232: GFLOPs: 28.0595. Time: 149.8438 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #233: GFLOPs: 36.5822. Time: 114.9340 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #234: GFLOPs: 29.6649. Time: 141.7347 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #235: GFLOPs: 34.2966. Time: 122.5937 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #236: GFLOPs: 31.9933. Time: 131.4195 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #237: GFLOPs: 40.2331. Time: 104.5046 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #238: GFLOPs: 31.8548. Time: 131.9909 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #239: GFLOPs: 36.3348. Time: 115.7169 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #240: GFLOPs: 39.5232. Time: 106.3817 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #241: GFLOPs: 19.4674. Time: 215.9792 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #242: GFLOPs: 34.6766. Time: 121.2501 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #243: GFLOPs: 38.4244. Time: 109.4239 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #244: GFLOPs: 26.9834. Time: 155.8194 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #245: GFLOPs: 39.6753. Time: 105.9737 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #246: GFLOPs: 38.9061. Time: 108.0690 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #247: GFLOPs: 34.8709. Time: 120.5747 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #248: GFLOPs: 36.8383. Time: 114.1352 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #249: GFLOPs: 33.8245. Time: 124.3047 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #250: GFLOPs: 41.1431. Time: 102.1932 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #251: GFLOPs: 17.1006. Time: 245.8711 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #252: GFLOPs: 39.7392. Time: 105.8034 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #253: GFLOPs: 7.8835. Time: 533.3380 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #254: GFLOPs: 13.2207. Time: 318.0283 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #255: GFLOPs: 10.8690. Time: 386.8371 us. Best GFLOPs: 50.4035
2024-04-30 20:10:26 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 20:10:26 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 20:10:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x22a04568)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xdf9b628)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x13fc0f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x118c1588)]: 0 failure(s)
2024-04-30 20:10:27 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-30 20:10:30 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x22a04568)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xdf9b628)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x13fc0f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x118c1588)]: 0 failure(s)
2024-04-30 20:10:32 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x22a04568)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xdf9b628)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x13fc0f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x118c1588)]: 0 failure(s)
2024-04-30 20:10:35 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x22a04568)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xdf9b628)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x13fc0f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x118c1588)]: 0 failure(s)
2024-04-30 20:10:38 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x22a04568)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xdf9b628)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x13fc0f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x118c1588)]: 0 failure(s)
2024-04-30 20:10:40 [INFO] [evolutionary_search.cc:649] Scores of the best 1 candidates:
[1 : 1]:	0.7794
2024-04-30 20:10:40 [INFO] [evolutionary_search.cc:727] Got 1 candidate(s) with evolutionary search
2024-04-30 20:10:40 [INFO] [evolutionary_search.cc:730] Sending 1 candidates(s) for measurement
2024-04-30 20:10:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_multiply_add_add_nn_relu_6] Trial #256: GFLOPs: 29.4954. Time: 142.5493 us. Best GFLOPs: 50.4035
