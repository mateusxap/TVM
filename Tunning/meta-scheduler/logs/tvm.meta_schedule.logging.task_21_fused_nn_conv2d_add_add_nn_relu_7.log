2024-04-30 19:06:07 [INFO] [task_scheduler.cc:160] Initializing Task #21: "fused_nn_conv2d_add_add_nn_relu_7"
2024-04-30 19:06:07 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(1024)), "float32"), p1: T.Buffer((T.int64(1), T.int64(1), T.int64(1024), T.int64(256)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(256)), "float32"), p3: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(256)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(256)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        pad_temp = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(1024)))
        conv2d_nhwc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(256)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(256)))
        T_add_1 = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(256)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(1024)):
            with T.block("pad_temp"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2, v_i3])
                T.writes(pad_temp[v_i0, v_i1, v_i2, v_i3])
                pad_temp[v_i0, v_i1, v_i2, v_i3] = p0[v_i0, v_i1, v_i2, v_i3]
        for nn, yy, xx, ff, ry, rx, rc in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(256), T.int64(1), T.int64(1), T.int64(1024)):
            with T.block("conv2d_nhwc"):
                v_nn, v_yy, v_xx, v_ff, v_ry, v_rx, v_rc = T.axis.remap("SSSSRRR", [nn, yy, xx, ff, ry, rx, rc])
                T.reads(pad_temp[v_nn, v_yy + v_ry, v_xx + v_rx, v_rc], p1[v_ry, v_rx, v_rc, v_ff])
                T.writes(conv2d_nhwc[v_nn, v_yy, v_xx, v_ff])
                with T.init():
                    conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = T.float32(0)
                conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] + pad_temp[v_nn, v_yy + v_ry, v_xx + v_rx, v_rc] * p1[v_ry, v_rx, v_rc, v_ff]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(256)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, T.int64(0), T.int64(0), v_ax3])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, T.int64(0), T.int64(0), v_ax3]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(256)):
            with T.block("T_add_1"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3], p3[v_ax0, T.int64(0), T.int64(0), v_ax3])
                T.writes(T_add_1[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add_1[v_ax0, v_ax1, v_ax2, v_ax3] = T_add[v_ax0, v_ax1, v_ax2, v_ax3] + p3[v_ax0, T.int64(0), T.int64(0), v_ax3]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(256)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add_1[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add_1[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-04-30 19:06:07 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-30 19:06:07 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(1024)), "float32"), p1: T.Buffer((T.int64(1), T.int64(1), T.int64(1024), T.int64(256)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(256)), "float32"), p3: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(256)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(256)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 96, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            conv2d_nhwc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(256)))
            for nn_0, yy_0, xx_0, ff_0, nn_1, yy_1, xx_1, ff_1, ry_0, rx_0, rc_0, nn_2, yy_2, xx_2, ff_2, ry_1, rx_1, rc_1, nn_3, yy_3, xx_3, ff_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(16)):
                with T.block("conv2d_nhwc"):
                    v_nn = T.axis.spatial(T.int64(1), nn_0 + nn_1 + nn_2 + nn_3)
                    v_yy = T.axis.spatial(T.int64(2), yy_0 * T.int64(2) + yy_1 + yy_2 + yy_3)
                    v_xx = T.axis.spatial(T.int64(2), xx_0 * T.int64(2) + xx_1 * T.int64(2) + xx_2 + xx_3)
                    v_ff = T.axis.spatial(T.int64(256), ff_0 * T.int64(256) + ff_1 * T.int64(16) + ff_2 * T.int64(16) + ff_3)
                    v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1)
                    v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1)
                    v_rc = T.axis.reduce(T.int64(1024), rc_0 * T.int64(32) + rc_1)
                    T.reads(p0[v_nn, v_yy + v_ry, v_xx + v_rx, v_rc], p1[v_ry, v_rx, v_rc, v_ff])
                    T.writes(conv2d_nhwc[v_nn, v_yy, v_xx, v_ff])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = T.float32(0)
                    conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] + p0[v_nn, v_yy + v_ry, v_xx + v_rx, v_rc] * p1[v_ry, v_rx, v_rc, v_ff]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(256)):
                with T.block("T_relu"):
                    v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                    T.reads(conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, T.int64(0), T.int64(0), v_ax3], p3[v_ax0, T.int64(0), T.int64(0), v_ax3])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, T.int64(0), T.int64(0), v_ax3] + p3[v_ax0, T.int64(0), T.int64(0), v_ax3], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nhwc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_add_1", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b3)
sch.compute_inline(block=b2)
sch.compute_inline(block=b0)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l5, factors=[v12, v13, v14, v15], preserve_unit_iters=True, disable_predication=False)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l6, factors=[v20, v21, v22, v23], preserve_unit_iters=True, disable_predication=False)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 2, 1])
l32, l33, l34, l35 = sch.split(loop=l7, factors=[v28, v29, v30, v31], preserve_unit_iters=True, disable_predication=False)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 16, 1, 16])
l40, l41, l42, l43 = sch.split(loop=l8, factors=[v36, v37, v38, v39], preserve_unit_iters=True, disable_predication=False)
v44, v45 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l46, l47 = sch.split(loop=l9, factors=[v44, v45], preserve_unit_iters=True, disable_predication=False)
v48, v49 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l50, l51 = sch.split(loop=l10, factors=[v48, v49], preserve_unit_iters=True, disable_predication=False)
v52, v53 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[32, 32])
l54, l55 = sch.split(loop=l11, factors=[v52, v53], preserve_unit_iters=True, disable_predication=False)
sch.reorder(l16, l24, l32, l40, l17, l25, l33, l41, l46, l50, l54, l18, l26, l34, l42, l47, l51, l55, l19, l27, l35, l43)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.vectorize", ann_val=64)
v56 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v56)
2024-04-30 19:06:07 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(1024)), "float32"), p1: T.Buffer((T.int64(1), T.int64(1), T.int64(1024), T.int64(256)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(256)), "float32"), p3: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(256)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(256)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 96, "meta_schedule.unroll_explicit": 0, "meta_schedule.vectorize": 64})
            conv2d_nhwc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(256)))
            for nn_0, yy_0, xx_0, ff_0, nn_1, yy_1, xx_1, ff_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(16)):
                for ry_0, rx_0, rc_0, nn_2, yy_2, xx_2, ff_2, ry_1, rx_1, rc_1, nn_3, yy_3, xx_3, ff_3 in T.grid(T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(16)):
                    with T.block("conv2d_nhwc"):
                        v_nn = T.axis.spatial(T.int64(1), nn_0 + nn_1 + nn_2 + nn_3)
                        v_yy = T.axis.spatial(T.int64(2), yy_0 * T.int64(2) + yy_1 + yy_2 + yy_3)
                        v_xx = T.axis.spatial(T.int64(2), xx_0 * T.int64(2) + xx_1 * T.int64(2) + xx_2 + xx_3)
                        v_ff = T.axis.spatial(T.int64(256), ff_0 * T.int64(256) + ff_1 * T.int64(16) + ff_2 * T.int64(16) + ff_3)
                        v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1)
                        v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1)
                        v_rc = T.axis.reduce(T.int64(1024), rc_0 * T.int64(32) + rc_1)
                        T.reads(p0[v_nn, v_yy + v_ry, v_xx + v_rx, v_rc], p1[v_ry, v_rx, v_rc, v_ff])
                        T.writes(conv2d_nhwc[v_nn, v_yy, v_xx, v_ff])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = T.float32(0)
                        conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] + p0[v_nn, v_yy + v_ry, v_xx + v_rx, v_rc] * p1[v_ry, v_rx, v_rc, v_ff]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(16)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(2), yy_1 + ax1)
                        v_ax2 = T.axis.spatial(T.int64(2), ax2)
                        v_ax3 = T.axis.spatial(T.int64(256), ff_1 * T.int64(16) + ax3)
                        T.reads(conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, T.int64(0), T.int64(0), v_ax3], p3[v_ax0, T.int64(0), T.int64(0), v_ax3])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, T.int64(0), T.int64(0), v_ax3] + p3[v_ax0, T.int64(0), T.int64(0), v_ax3], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nhwc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_add_1", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b3)
sch.compute_inline(block=b2)
sch.compute_inline(block=b0)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l5, factors=[v12, v13, v14, v15], preserve_unit_iters=True, disable_predication=False)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l6, factors=[v20, v21, v22, v23], preserve_unit_iters=True, disable_predication=False)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 2, 1])
l32, l33, l34, l35 = sch.split(loop=l7, factors=[v28, v29, v30, v31], preserve_unit_iters=True, disable_predication=False)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 16, 1, 16])
l40, l41, l42, l43 = sch.split(loop=l8, factors=[v36, v37, v38, v39], preserve_unit_iters=True, disable_predication=False)
v44, v45 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l46, l47 = sch.split(loop=l9, factors=[v44, v45], preserve_unit_iters=True, disable_predication=False)
v48, v49 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l50, l51 = sch.split(loop=l10, factors=[v48, v49], preserve_unit_iters=True, disable_predication=False)
v52, v53 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[32, 32])
l54, l55 = sch.split(loop=l11, factors=[v52, v53], preserve_unit_iters=True, disable_predication=False)
sch.reorder(l16, l24, l32, l40, l17, l25, l33, l41, l46, l50, l54, l18, l26, l34, l42, l47, l51, l55, l19, l27, l35, l43)
b56, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b56, loop=l41, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.vectorize", ann_val=64)
v57 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v57)
2024-04-30 19:06:07 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(1024)), "float32"), p1: T.Buffer((T.int64(1), T.int64(1), T.int64(1024), T.int64(256)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(256)), "float32"), p3: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(256)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(256)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 96, "meta_schedule.unroll_explicit": 64, "meta_schedule.vectorize": 64})
            conv2d_nhwc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(256)))
            for nn_0, yy_0, xx_0, ff_0 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                for nn_1, yy_1, xx_1, ff_1, ry_0, rx_0, rc_0, nn_2, yy_2, xx_2, ff_2, ry_1, rx_1, rc_1, nn_3, yy_3, xx_3, ff_3 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(16)):
                    with T.block("conv2d_nhwc"):
                        v_nn = T.axis.spatial(T.int64(1), nn_0 + nn_1 + nn_2 + nn_3)
                        v_yy = T.axis.spatial(T.int64(2), yy_0 * T.int64(2) + yy_1 + yy_2 + yy_3)
                        v_xx = T.axis.spatial(T.int64(2), xx_0 * T.int64(2) + xx_1 * T.int64(2) + xx_2 + xx_3)
                        v_ff = T.axis.spatial(T.int64(256), ff_0 * T.int64(256) + ff_1 * T.int64(16) + ff_2 * T.int64(16) + ff_3)
                        v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1)
                        v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1)
                        v_rc = T.axis.reduce(T.int64(1024), rc_0 * T.int64(32) + rc_1)
                        T.reads(p0[v_nn, v_yy + v_ry, v_xx + v_rx, v_rc], p1[v_ry, v_rx, v_rc, v_ff])
                        T.writes(conv2d_nhwc[v_nn, v_yy, v_xx, v_ff])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = T.float32(0)
                        conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] + p0[v_nn, v_yy + v_ry, v_xx + v_rx, v_rc] * p1[v_ry, v_rx, v_rc, v_ff]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(256)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                        T.reads(conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, T.int64(0), T.int64(0), v_ax3], p3[v_ax0, T.int64(0), T.int64(0), v_ax3])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, T.int64(0), T.int64(0), v_ax3] + p3[v_ax0, T.int64(0), T.int64(0), v_ax3], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nhwc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_add_1", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b3)
sch.compute_inline(block=b2)
sch.compute_inline(block=b0)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l5, factors=[v12, v13, v14, v15], preserve_unit_iters=True, disable_predication=False)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l6, factors=[v20, v21, v22, v23], preserve_unit_iters=True, disable_predication=False)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 2, 1])
l32, l33, l34, l35 = sch.split(loop=l7, factors=[v28, v29, v30, v31], preserve_unit_iters=True, disable_predication=False)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 16, 1, 16])
l40, l41, l42, l43 = sch.split(loop=l8, factors=[v36, v37, v38, v39], preserve_unit_iters=True, disable_predication=False)
v44, v45 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l46, l47 = sch.split(loop=l9, factors=[v44, v45], preserve_unit_iters=True, disable_predication=False)
v48, v49 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l50, l51 = sch.split(loop=l10, factors=[v48, v49], preserve_unit_iters=True, disable_predication=False)
v52, v53 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[32, 32])
l54, l55 = sch.split(loop=l11, factors=[v52, v53], preserve_unit_iters=True, disable_predication=False)
sch.reorder(l16, l24, l32, l40, l17, l25, l33, l41, l46, l50, l54, l18, l26, l34, l42, l47, l51, l55, l19, l27, l35, l43)
b56, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b56, loop=l40, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.vectorize", ann_val=64)
v57 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v57)
2024-04-30 19:13:54 [INFO] [task_scheduler.cc:160] Initializing Task #21: "fused_nn_conv2d_add_add_nn_relu_7"
2024-04-30 19:13:54 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(1024)), "float32"), p1: T.Buffer((T.int64(1), T.int64(1), T.int64(1024), T.int64(256)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(256)), "float32"), p3: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(256)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(256)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        pad_temp = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(1024)))
        conv2d_nhwc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(256)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(256)))
        T_add_1 = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(256)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(1024)):
            with T.block("pad_temp"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2, v_i3])
                T.writes(pad_temp[v_i0, v_i1, v_i2, v_i3])
                pad_temp[v_i0, v_i1, v_i2, v_i3] = p0[v_i0, v_i1, v_i2, v_i3]
        for nn, yy, xx, ff, ry, rx, rc in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(256), T.int64(1), T.int64(1), T.int64(1024)):
            with T.block("conv2d_nhwc"):
                v_nn, v_yy, v_xx, v_ff, v_ry, v_rx, v_rc = T.axis.remap("SSSSRRR", [nn, yy, xx, ff, ry, rx, rc])
                T.reads(pad_temp[v_nn, v_yy + v_ry, v_xx + v_rx, v_rc], p1[v_ry, v_rx, v_rc, v_ff])
                T.writes(conv2d_nhwc[v_nn, v_yy, v_xx, v_ff])
                with T.init():
                    conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = T.float32(0)
                conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] + pad_temp[v_nn, v_yy + v_ry, v_xx + v_rx, v_rc] * p1[v_ry, v_rx, v_rc, v_ff]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(256)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, T.int64(0), T.int64(0), v_ax3])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, T.int64(0), T.int64(0), v_ax3]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(256)):
            with T.block("T_add_1"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3], p3[v_ax0, T.int64(0), T.int64(0), v_ax3])
                T.writes(T_add_1[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add_1[v_ax0, v_ax1, v_ax2, v_ax3] = T_add[v_ax0, v_ax1, v_ax2, v_ax3] + p3[v_ax0, T.int64(0), T.int64(0), v_ax3]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(256)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add_1[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add_1[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-04-30 19:13:54 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-30 19:13:54 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(1024)), "float32"), p1: T.Buffer((T.int64(1), T.int64(1), T.int64(1024), T.int64(256)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(256)), "float32"), p3: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(256)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(256)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 96, "meta_schedule.unroll_explicit": 0, "meta_schedule.vectorize": 64})
            conv2d_nhwc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(256)))
            for nn_0, yy_0, xx_0, ff_0, nn_1, yy_1, xx_1, ff_1, ry_0, rx_0, rc_0, nn_2, yy_2, xx_2, ff_2, ry_1, rx_1, rc_1, nn_3, yy_3, xx_3, ff_3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(16), T.int64(1), T.int64(2), T.int64(1), T.int64(64)):
                with T.block("conv2d_nhwc"):
                    v_nn = T.axis.spatial(T.int64(1), nn_0 + nn_1 + nn_2 + nn_3)
                    v_yy = T.axis.spatial(T.int64(2), yy_0 * T.int64(2) + yy_1 * T.int64(2) + yy_2 * T.int64(2) + yy_3)
                    v_xx = T.axis.spatial(T.int64(2), xx_0 + xx_1 + xx_2 + xx_3)
                    v_ff = T.axis.spatial(T.int64(256), ff_0 * T.int64(64) + ff_1 * T.int64(64) + ff_2 * T.int64(64) + ff_3)
                    v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1)
                    v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1)
                    v_rc = T.axis.reduce(T.int64(1024), rc_0 * T.int64(16) + rc_1)
                    T.reads(p0[v_nn, v_yy + v_ry, v_xx + v_rx, v_rc], p1[v_ry, v_rx, v_rc, v_ff])
                    T.writes(conv2d_nhwc[v_nn, v_yy, v_xx, v_ff])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = T.float32(0)
                    conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] + p0[v_nn, v_yy + v_ry, v_xx + v_rx, v_rc] * p1[v_ry, v_rx, v_rc, v_ff]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(256)):
                with T.block("T_relu"):
                    v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                    T.reads(conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, T.int64(0), T.int64(0), v_ax3], p3[v_ax0, T.int64(0), T.int64(0), v_ax3])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, T.int64(0), T.int64(0), v_ax3] + p3[v_ax0, T.int64(0), T.int64(0), v_ax3], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nhwc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_add_1", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b3)
sch.compute_inline(block=b2)
sch.compute_inline(block=b0)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l5, factors=[v12, v13, v14, v15], preserve_unit_iters=True, disable_predication=False)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 2])
l24, l25, l26, l27 = sch.split(loop=l6, factors=[v20, v21, v22, v23], preserve_unit_iters=True, disable_predication=False)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l7, factors=[v28, v29, v30, v31], preserve_unit_iters=True, disable_predication=False)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[4, 1, 1, 64])
l40, l41, l42, l43 = sch.split(loop=l8, factors=[v36, v37, v38, v39], preserve_unit_iters=True, disable_predication=False)
v44, v45 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l46, l47 = sch.split(loop=l9, factors=[v44, v45], preserve_unit_iters=True, disable_predication=False)
v48, v49 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l50, l51 = sch.split(loop=l10, factors=[v48, v49], preserve_unit_iters=True, disable_predication=False)
v52, v53 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[64, 16])
l54, l55 = sch.split(loop=l11, factors=[v52, v53], preserve_unit_iters=True, disable_predication=False)
sch.reorder(l16, l24, l32, l40, l17, l25, l33, l41, l46, l50, l54, l18, l26, l34, l42, l47, l51, l55, l19, l27, l35, l43)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.vectorize", ann_val=64)
v56 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v56)
2024-04-30 19:13:54 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(1024)), "float32"), p1: T.Buffer((T.int64(1), T.int64(1), T.int64(1024), T.int64(256)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(256)), "float32"), p3: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(256)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(256)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 96, "meta_schedule.unroll_explicit": 64, "meta_schedule.vectorize": 64})
            conv2d_nhwc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(256)))
            for nn_0, yy_0, xx_0, ff_0, nn_1, yy_1, xx_1, ff_1 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                for ry_0, rx_0, rc_0, nn_2, yy_2, xx_2, ff_2, ry_1, rx_1, rc_1, nn_3, yy_3, xx_3, ff_3 in T.grid(T.int64(1), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(16), T.int64(1), T.int64(2), T.int64(1), T.int64(64)):
                    with T.block("conv2d_nhwc"):
                        v_nn = T.axis.spatial(T.int64(1), nn_0 + nn_1 + nn_2 + nn_3)
                        v_yy = T.axis.spatial(T.int64(2), yy_0 * T.int64(2) + yy_1 * T.int64(2) + yy_2 * T.int64(2) + yy_3)
                        v_xx = T.axis.spatial(T.int64(2), xx_0 + xx_1 + xx_2 + xx_3)
                        v_ff = T.axis.spatial(T.int64(256), ff_0 * T.int64(64) + ff_1 * T.int64(64) + ff_2 * T.int64(64) + ff_3)
                        v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1)
                        v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1)
                        v_rc = T.axis.reduce(T.int64(1024), rc_0 * T.int64(16) + rc_1)
                        T.reads(p0[v_nn, v_yy + v_ry, v_xx + v_rx, v_rc], p1[v_ry, v_rx, v_rc, v_ff])
                        T.writes(conv2d_nhwc[v_nn, v_yy, v_xx, v_ff])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = T.float32(0)
                        conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] + p0[v_nn, v_yy + v_ry, v_xx + v_rx, v_rc] * p1[v_ry, v_rx, v_rc, v_ff]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(64)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1 = T.axis.remap("SS", [ax0, ax1])
                        v_ax2 = T.axis.spatial(T.int64(2), xx_0 + ax2)
                        v_ax3 = T.axis.spatial(T.int64(256), ff_0 * T.int64(64) + ax3)
                        T.reads(conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, T.int64(0), T.int64(0), v_ax3], p3[v_ax0, T.int64(0), T.int64(0), v_ax3])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, T.int64(0), T.int64(0), v_ax3] + p3[v_ax0, T.int64(0), T.int64(0), v_ax3], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nhwc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_add_1", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b3)
sch.compute_inline(block=b2)
sch.compute_inline(block=b0)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l5, factors=[v12, v13, v14, v15], preserve_unit_iters=True, disable_predication=False)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 2])
l24, l25, l26, l27 = sch.split(loop=l6, factors=[v20, v21, v22, v23], preserve_unit_iters=True, disable_predication=False)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l7, factors=[v28, v29, v30, v31], preserve_unit_iters=True, disable_predication=False)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[4, 1, 1, 64])
l40, l41, l42, l43 = sch.split(loop=l8, factors=[v36, v37, v38, v39], preserve_unit_iters=True, disable_predication=False)
v44, v45 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l46, l47 = sch.split(loop=l9, factors=[v44, v45], preserve_unit_iters=True, disable_predication=False)
v48, v49 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l50, l51 = sch.split(loop=l10, factors=[v48, v49], preserve_unit_iters=True, disable_predication=False)
v52, v53 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[64, 16])
l54, l55 = sch.split(loop=l11, factors=[v52, v53], preserve_unit_iters=True, disable_predication=False)
sch.reorder(l16, l24, l32, l40, l17, l25, l33, l41, l46, l50, l54, l18, l26, l34, l42, l47, l51, l55, l19, l27, l35, l43)
b56, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b56, loop=l41, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.vectorize", ann_val=64)
v57 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v57)
2024-04-30 19:13:54 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(1024)), "float32"), p1: T.Buffer((T.int64(1), T.int64(1), T.int64(1024), T.int64(256)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(256)), "float32"), p3: T.Buffer((T.int64(1), T.int64(1), T.int64(1), T.int64(256)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(256)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 96, "meta_schedule.unroll_explicit": 64, "meta_schedule.vectorize": 64})
            conv2d_nhwc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(2), T.int64(256)))
            for nn_0, yy_0, xx_0, ff_0 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(4)):
                for nn_1, yy_1, xx_1, ff_1, ry_0, rx_0, rc_0, nn_2, yy_2, xx_2, ff_2, ry_1, rx_1, rc_1, nn_3, yy_3, xx_3, ff_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(16), T.int64(1), T.int64(2), T.int64(1), T.int64(64)):
                    with T.block("conv2d_nhwc"):
                        v_nn = T.axis.spatial(T.int64(1), nn_0 + nn_1 + nn_2 + nn_3)
                        v_yy = T.axis.spatial(T.int64(2), yy_0 * T.int64(2) + yy_1 * T.int64(2) + yy_2 * T.int64(2) + yy_3)
                        v_xx = T.axis.spatial(T.int64(2), xx_0 + xx_1 + xx_2 + xx_3)
                        v_ff = T.axis.spatial(T.int64(256), ff_0 * T.int64(64) + ff_1 * T.int64(64) + ff_2 * T.int64(64) + ff_3)
                        v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1)
                        v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1)
                        v_rc = T.axis.reduce(T.int64(1024), rc_0 * T.int64(16) + rc_1)
                        T.reads(p0[v_nn, v_yy + v_ry, v_xx + v_rx, v_rc], p1[v_ry, v_rx, v_rc, v_ff])
                        T.writes(conv2d_nhwc[v_nn, v_yy, v_xx, v_ff])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = T.float32(0)
                        conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] = conv2d_nhwc[v_nn, v_yy, v_xx, v_ff] + p0[v_nn, v_yy + v_ry, v_xx + v_rx, v_rc] * p1[v_ry, v_rx, v_rc, v_ff]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(64)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1 = T.axis.remap("SS", [ax0, ax1])
                        v_ax2 = T.axis.spatial(T.int64(2), xx_0 + ax2)
                        v_ax3 = T.axis.spatial(T.int64(256), ff_0 * T.int64(64) + ax3)
                        T.reads(conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, T.int64(0), T.int64(0), v_ax3], p3[v_ax0, T.int64(0), T.int64(0), v_ax3])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(conv2d_nhwc[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, T.int64(0), T.int64(0), v_ax3] + p3[v_ax0, T.int64(0), T.int64(0), v_ax3], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nhwc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_add_1", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b3)
sch.compute_inline(block=b2)
sch.compute_inline(block=b0)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l5, factors=[v12, v13, v14, v15], preserve_unit_iters=True, disable_predication=False)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 2])
l24, l25, l26, l27 = sch.split(loop=l6, factors=[v20, v21, v22, v23], preserve_unit_iters=True, disable_predication=False)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l7, factors=[v28, v29, v30, v31], preserve_unit_iters=True, disable_predication=False)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[4, 1, 1, 64])
l40, l41, l42, l43 = sch.split(loop=l8, factors=[v36, v37, v38, v39], preserve_unit_iters=True, disable_predication=False)
v44, v45 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l46, l47 = sch.split(loop=l9, factors=[v44, v45], preserve_unit_iters=True, disable_predication=False)
v48, v49 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l50, l51 = sch.split(loop=l10, factors=[v48, v49], preserve_unit_iters=True, disable_predication=False)
v52, v53 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[64, 16])
l54, l55 = sch.split(loop=l11, factors=[v52, v53], preserve_unit_iters=True, disable_predication=False)
sch.reorder(l16, l24, l32, l40, l17, l25, l33, l41, l46, l50, l54, l18, l26, l34, l42, l47, l51, l55, l19, l27, l35, l43)
b56, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b56, loop=l40, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.vectorize", ann_val=64)
v57 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v57)
2024-04-30 19:27:32 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 19:27:32 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-30 19:27:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x116995b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10ad2868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x21486438)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xd677208)]: 0 failure(s)
2024-04-30 19:27:34 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-30 19:27:37 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x116995b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10ad2868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x21486438)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xd677208)]: 0 failure(s)
2024-04-30 19:27:39 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x116995b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10ad2868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x21486438)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xd677208)]: 0 failure(s)
2024-04-30 19:27:42 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x116995b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10ad2868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x21486438)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xd677208)]: 0 failure(s)
2024-04-30 19:27:44 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x116995b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10ad2868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x21486438)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xd677208)]: 0 failure(s)
2024-04-30 19:27:44 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9986  0.9969  0.9966  0.9966  0.9963  0.9951  0.9951  0.9949  0.9942  0.9935  0.9922  0.9897  0.9896  0.9891  0.9882  0.9875
[17 : 32]:	0.9869  0.9862  0.9862  0.9856  0.9854  0.9846  0.9844  0.9841  0.9840  0.9835  0.9830  0.9824  0.9814  0.9813  0.9803  0.9803
[33 : 48]:	0.9791  0.9787  0.9782  0.9778  0.9773  0.9766  0.9764  0.9762  0.9761  0.9755  0.9751  0.9748  0.9745  0.9734  0.9734  0.9733
[49 : 64]:	0.9722  0.9720  0.9713  0.9711  0.9698  0.9676  0.9670  0.9664  0.9664  0.9663  0.9658  0.9645  0.9645  0.9643  0.9641  0.9640
2024-04-30 19:27:44 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 19:27:45 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #1: GFLOPs: 19.2746. Time: 108.9635 us. Best GFLOPs: 19.2746
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #2: GFLOPs: 25.6181. Time: 81.9821 us. Best GFLOPs: 25.6181
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #3: GFLOPs: 33.3463. Time: 62.9821 us. Best GFLOPs: 33.3463
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #4: GFLOPs: 28.4376. Time: 73.8538 us. Best GFLOPs: 33.3463
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #5: GFLOPs: 30.3253. Time: 69.2564 us. Best GFLOPs: 33.3463
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #6: GFLOPs: 13.9463. Time: 150.5938 us. Best GFLOPs: 33.3463
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #7: GFLOPs: 13.5839. Time: 154.6113 us. Best GFLOPs: 33.3463
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #8: GFLOPs: 20.5593. Time: 102.1545 us. Best GFLOPs: 33.3463
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #9: GFLOPs: 4.7113. Time: 445.7849 us. Best GFLOPs: 33.3463
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #10: GFLOPs: 6.1064. Time: 343.9384 us. Best GFLOPs: 33.3463
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #11: GFLOPs: 14.1288. Time: 148.6488 us. Best GFLOPs: 33.3463
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #12: GFLOPs: 16.5746. Time: 126.7133 us. Best GFLOPs: 33.3463
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #13: GFLOPs: 11.6129. Time: 180.8529 us. Best GFLOPs: 33.3463
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #14: GFLOPs: 33.7337. Time: 62.2589 us. Best GFLOPs: 33.7337
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #15: GFLOPs: 11.9250. Time: 176.1198 us. Best GFLOPs: 33.7337
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #16: GFLOPs: 29.4828. Time: 71.2356 us. Best GFLOPs: 33.7337
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #17: GFLOPs: 47.4783. Time: 44.2355 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #18: GFLOPs: 31.9711. Time: 65.6914 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #19: GFLOPs: 28.6184. Time: 73.3871 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #20: GFLOPs: 13.5204. Time: 155.3376 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #21: GFLOPs: 11.3992. Time: 184.2436 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #22: GFLOPs: 4.0909. Time: 513.3887 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #23: GFLOPs: 6.7621. Time: 310.5856 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #24: GFLOPs: 8.1730. Time: 256.9695 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #25: GFLOPs: 8.6329. Time: 243.2827 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #26: GFLOPs: 24.9756. Time: 84.0912 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #27: GFLOPs: 21.9561. Time: 95.6557 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #28: GFLOPs: 23.3351. Time: 90.0028 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #29: GFLOPs: 30.5633. Time: 68.7173 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #30: GFLOPs: 6.2414. Time: 336.4969 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #31: GFLOPs: 30.2762. Time: 69.3687 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #32: GFLOPs: 30.1580. Time: 69.6407 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #33: GFLOPs: 13.0993. Time: 160.3315 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #34: GFLOPs: 43.1510. Time: 48.6715 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #35: GFLOPs: 23.0856. Time: 90.9757 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #36: GFLOPs: 21.3729. Time: 98.2658 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #37: GFLOPs: 9.8485. Time: 213.2535 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #38: GFLOPs: 9.0630. Time: 231.7359 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #39: GFLOPs: 11.0729. Time: 189.6723 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #40: GFLOPs: 11.0953. Time: 189.2892 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #41: GFLOPs: 31.9972. Time: 65.6377 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #42: GFLOPs: 23.6811. Time: 88.6878 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #43: GFLOPs: 8.8593. Time: 237.0644 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #44: GFLOPs: 2.9013. Time: 723.8916 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #45: GFLOPs: 29.9753. Time: 70.0652 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #46: GFLOPs: 7.4678. Time: 281.2383 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #47: GFLOPs: 10.3050. Time: 203.8067 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #48: GFLOPs: 12.6828. Time: 165.5965 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #49: GFLOPs: 5.2724. Time: 398.3442 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #50: GFLOPs: 22.2061. Time: 94.5785 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #51: GFLOPs: 20.8654. Time: 100.6558 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #52: GFLOPs: 11.2154. Time: 187.2625 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #53: GFLOPs: 9.2520. Time: 227.0013 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #54: GFLOPs: 11.5207. Time: 182.2999 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #55: GFLOPs: 11.1992. Time: 187.5327 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #56: GFLOPs: 8.4183. Time: 249.4825 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #57: GFLOPs: 11.6388. Time: 180.4500 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #58: GFLOPs: 3.3153. Time: 633.4972 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #59: GFLOPs: 15.6921. Time: 133.8397 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #60: GFLOPs: 10.9714. Time: 191.4269 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #61: GFLOPs: 8.5639. Time: 245.2429 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #62: GFLOPs: 15.8357. Time: 132.6258 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #63: GFLOPs: 7.9905. Time: 262.8417 us. Best GFLOPs: 47.4783
2024-04-30 19:36:35 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #64: GFLOPs: 24.0716. Time: 87.2490 us. Best GFLOPs: 47.4783
2024-04-30 19:47:50 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 19:47:50 [INFO] [evolutionary_search.cc:715] Picked top 64 candidate(s) from database
2024-04-30 19:47:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x116995b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10ad2868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x21486438)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xd677208)]: 0 failure(s)
2024-04-30 19:47:51 [INFO] [evolutionary_search.cc:723] Sampled 448 candidate(s)
2024-04-30 19:47:55 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x116995b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10ad2868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x21486438)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xd677208)]: 0 failure(s)
2024-04-30 19:47:58 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x116995b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10ad2868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x21486438)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xd677208)]: 0 failure(s)
2024-04-30 19:48:01 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x116995b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10ad2868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x21486438)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xd677208)]: 0 failure(s)
2024-04-30 19:48:05 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x116995b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10ad2868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x21486438)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xd677208)]: 0 failure(s)
2024-04-30 19:48:07 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0280  1.0087  1.0019  0.9964  0.9964  0.9964  0.9915  0.9905  0.9905  0.9570  0.8978  0.8798  0.8756  0.8726  0.8665  0.8646
[17 : 32]:	0.8626  0.8603  0.8582  0.8513  0.8506  0.8472  0.8386  0.8386  0.8332  0.8306  0.8293  0.8274  0.8267  0.8261  0.8257  0.8237
[33 : 48]:	0.8226  0.8194  0.8180  0.8153  0.8153  0.8148  0.8133  0.8133  0.8133  0.8132  0.8129  0.8129  0.8114  0.8093  0.8057  0.8057
[49 : 64]:	0.8055  0.8046  0.8046  0.8046  0.8042  0.7971  0.7962  0.7962  0.7954  0.7954  0.7942  0.7880  0.7880  0.7877  0.7870  0.7854
2024-04-30 19:48:07 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 19:48:07 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #65: GFLOPs: 74.9886. Time: 28.0072 us. Best GFLOPs: 74.9886
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #66: GFLOPs: 62.0283. Time: 33.8591 us. Best GFLOPs: 74.9886
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #67: GFLOPs: 78.5813. Time: 26.7268 us. Best GFLOPs: 78.5813
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #68: GFLOPs: 76.8595. Time: 27.3255 us. Best GFLOPs: 78.5813
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #69: GFLOPs: 84.8083. Time: 24.7644 us. Best GFLOPs: 84.8083
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #70: GFLOPs: 63.7744. Time: 32.9321 us. Best GFLOPs: 84.8083
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #71: GFLOPs: 63.2272. Time: 33.2171 us. Best GFLOPs: 84.8083
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #72: GFLOPs: 69.6181. Time: 30.1678 us. Best GFLOPs: 84.8083
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #73: GFLOPs: 83.7325. Time: 25.0826 us. Best GFLOPs: 84.8083
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #74: GFLOPs: 68.3905. Time: 30.7093 us. Best GFLOPs: 84.8083
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #75: GFLOPs: 83.0514. Time: 25.2882 us. Best GFLOPs: 84.8083
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #76: GFLOPs: 84.6022. Time: 24.8247 us. Best GFLOPs: 84.8083
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #77: GFLOPs: 87.0869. Time: 24.1164 us. Best GFLOPs: 87.0869
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #78: GFLOPs: 76.2219. Time: 27.5541 us. Best GFLOPs: 87.0869
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #79: GFLOPs: 62.2977. Time: 33.7127 us. Best GFLOPs: 87.0869
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #80: GFLOPs: 78.1700. Time: 26.8674 us. Best GFLOPs: 87.0869
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #81: GFLOPs: 74.3715. Time: 28.2396 us. Best GFLOPs: 87.0869
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #82: GFLOPs: 86.2562. Time: 24.3487 us. Best GFLOPs: 87.0869
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #83: GFLOPs: 74.4103. Time: 28.2249 us. Best GFLOPs: 87.0869
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #84: GFLOPs: 87.8823. Time: 23.8982 us. Best GFLOPs: 87.8823
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #85: GFLOPs: 92.3344. Time: 22.7458 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #86: GFLOPs: 76.4069. Time: 27.4874 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #87: GFLOPs: 62.9589. Time: 33.3586 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #88: GFLOPs: 68.9645. Time: 30.4537 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #89: GFLOPs: 44.1976. Time: 47.5190 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #90: GFLOPs: 55.4800. Time: 37.8555 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #91: GFLOPs: 66.3900. Time: 31.6347 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #92: GFLOPs: 62.7034. Time: 33.4946 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #93: GFLOPs: 85.9247. Time: 24.4426 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #94: GFLOPs: 45.3841. Time: 46.2766 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #95: GFLOPs: 73.6482. Time: 28.5170 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #96: GFLOPs: 55.5679. Time: 37.7957 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #97: GFLOPs: 62.4953. Time: 33.6061 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #98: GFLOPs: 61.2601. Time: 34.2837 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #99: GFLOPs: 61.8922. Time: 33.9336 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #100: GFLOPs: 73.0333. Time: 28.7571 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #101: GFLOPs: 53.6434. Time: 39.1516 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #102: GFLOPs: 72.9372. Time: 28.7949 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #103: GFLOPs: 67.1301. Time: 31.2859 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #104: GFLOPs: 49.9209. Time: 42.0710 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #105: GFLOPs: 51.7742. Time: 40.5650 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #106: GFLOPs: 61.0348. Time: 34.4103 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #107: GFLOPs: 47.1580. Time: 44.5359 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #108: GFLOPs: 63.8175. Time: 32.9098 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #109: GFLOPs: 62.5280. Time: 33.5885 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #110: GFLOPs: 50.3789. Time: 41.6885 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #111: GFLOPs: 63.5822. Time: 33.0317 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #112: GFLOPs: 80.2955. Time: 26.1562 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #113: GFLOPs: 60.0565. Time: 34.9708 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #114: GFLOPs: 77.8234. Time: 26.9871 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #115: GFLOPs: 74.2753. Time: 28.2762 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #116: GFLOPs: 86.1474. Time: 24.3794 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #117: GFLOPs: 66.7499. Time: 31.4641 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #118: GFLOPs: 59.9420. Time: 35.0376 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #119: GFLOPs: 63.7315. Time: 32.9543 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #120: GFLOPs: 60.3014. Time: 34.8288 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #121: GFLOPs: 60.5924. Time: 34.6615 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #122: GFLOPs: 64.3010. Time: 32.6624 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #123: GFLOPs: 62.9849. Time: 33.3449 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #124: GFLOPs: 65.9178. Time: 31.8612 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #125: GFLOPs: 56.0507. Time: 37.4701 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #126: GFLOPs: 28.7239. Time: 73.1177 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #127: GFLOPs: 17.5862. Time: 119.4244 us. Best GFLOPs: 92.3344
2024-04-30 19:48:31 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #128: GFLOPs: 18.4841. Time: 113.6231 us. Best GFLOPs: 92.3344
2024-04-30 20:07:01 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 20:07:01 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 20:07:02 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x116995b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10ad2868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x21486438)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xd677208)]: 0 failure(s)
2024-04-30 20:07:02 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-30 20:07:06 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x116995b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10ad2868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x21486438)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xd677208)]: 0 failure(s)
2024-04-30 20:07:12 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x116995b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10ad2868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x21486438)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xd677208)]: 0 failure(s)
2024-04-30 20:07:17 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x116995b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10ad2868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x21486438)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xd677208)]: 0 failure(s)
2024-04-30 20:07:23 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x116995b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10ad2868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x21486438)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xd677208)]: 0 failure(s)
2024-04-30 20:07:25 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9361  0.9361  0.9361  0.9306  0.9306  0.9294  0.9282  0.9116  0.8962  0.8962  0.8962  0.8962  0.8962  0.8921  0.8894  0.8894
[17 : 32]:	0.8868  0.8852  0.8848  0.8848  0.8848  0.8836  0.8828  0.8818  0.8818  0.8818  0.8818  0.8784  0.8762  0.8724  0.8724  0.8698
[33 : 48]:	0.8698  0.8698  0.8564  0.8496  0.8487  0.8376  0.8364  0.8361  0.8351  0.8332  0.8332  0.8287  0.8269  0.8269  0.8194  0.8171
[49 : 64]:	0.8171  0.8171  0.8167  0.8167  0.8167  0.8156  0.8120  0.8117  0.8104  0.8095  0.8092  0.8092  0.8019  0.7980  0.7959  0.7930
2024-04-30 20:07:25 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 20:07:26 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #129: GFLOPs: 52.9835. Time: 39.6392 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #130: GFLOPs: 69.1416. Time: 30.3757 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #131: GFLOPs: 73.6100. Time: 28.5318 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #132: GFLOPs: 76.2262. Time: 27.5525 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #133: GFLOPs: 71.6926. Time: 29.2948 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #134: GFLOPs: 85.7312. Time: 24.4978 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #135: GFLOPs: 90.2468. Time: 23.2720 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #136: GFLOPs: 53.0022. Time: 39.6252 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #137: GFLOPs: 83.5547. Time: 25.1359 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #138: GFLOPs: 73.8776. Time: 28.4284 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #139: GFLOPs: 65.7257. Time: 31.9544 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #140: GFLOPs: 87.0887. Time: 24.1159 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #141: GFLOPs: 81.8738. Time: 25.6520 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #142: GFLOPs: 73.1247. Time: 28.7211 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #143: GFLOPs: 57.3001. Time: 36.6531 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #144: GFLOPs: 58.0388. Time: 36.1866 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #145: GFLOPs: 80.9887. Time: 25.9323 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #146: GFLOPs: 74.6781. Time: 28.1237 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #147: GFLOPs: 76.5099. Time: 27.4504 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #148: GFLOPs: 66.1920. Time: 31.7293 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #149: GFLOPs: 89.5286. Time: 23.4587 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #150: GFLOPs: 88.3669. Time: 23.7671 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #151: GFLOPs: 88.9025. Time: 23.6239 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #152: GFLOPs: 78.6288. Time: 26.7106 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #153: GFLOPs: 80.7008. Time: 26.0248 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #154: GFLOPs: 77.3918. Time: 27.1376 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #155: GFLOPs: 82.5657. Time: 25.4370 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #156: GFLOPs: 85.1397. Time: 24.6680 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #157: GFLOPs: 81.0413. Time: 25.9155 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #158: GFLOPs: 75.3962. Time: 27.8558 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #159: GFLOPs: 67.7440. Time: 31.0024 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #160: GFLOPs: 49.9908. Time: 42.0122 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #161: GFLOPs: 66.5612. Time: 31.5533 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #162: GFLOPs: 73.4086. Time: 28.6101 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #163: GFLOPs: 58.9559. Time: 35.6236 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #164: GFLOPs: 71.4547. Time: 29.3924 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #165: GFLOPs: 41.5808. Time: 50.5095 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #166: GFLOPs: 69.9841. Time: 30.0100 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #167: GFLOPs: 66.2535. Time: 31.6998 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #168: GFLOPs: 63.5417. Time: 33.0527 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #169: GFLOPs: 60.1540. Time: 34.9141 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #170: GFLOPs: 75.0883. Time: 27.9701 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #171: GFLOPs: 69.2432. Time: 30.3311 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #172: GFLOPs: 79.0247. Time: 26.5768 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #173: GFLOPs: 84.8337. Time: 24.7570 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #174: GFLOPs: 52.2886. Time: 40.1660 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #175: GFLOPs: 80.0677. Time: 26.2306 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #176: GFLOPs: 65.1245. Time: 32.2494 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #177: GFLOPs: 60.8611. Time: 34.5085 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #178: GFLOPs: 56.7962. Time: 36.9783 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #179: GFLOPs: 60.9154. Time: 34.4777 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #180: GFLOPs: 55.8568. Time: 37.6001 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #181: GFLOPs: 65.3647. Time: 32.1309 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #182: GFLOPs: 59.7436. Time: 35.1540 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #183: GFLOPs: 82.1701. Time: 25.5595 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #184: GFLOPs: 57.5438. Time: 36.4978 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #185: GFLOPs: 49.6798. Time: 42.2752 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #186: GFLOPs: 31.7501. Time: 66.1486 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #187: GFLOPs: 81.9672. Time: 25.6227 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #188: GFLOPs: 84.6106. Time: 24.8222 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #189: GFLOPs: 85.8279. Time: 24.4702 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #190: GFLOPs: 43.8639. Time: 47.8805 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #191: GFLOPs: 33.3301. Time: 63.0128 us. Best GFLOPs: 92.3344
2024-04-30 20:07:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #192: GFLOPs: 45.7894. Time: 45.8671 us. Best GFLOPs: 92.3344
2024-04-30 20:12:22 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 20:12:22 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 20:12:23 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x116995b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10ad2868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x21486438)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xd677208)]: 0 failure(s)
2024-04-30 20:12:23 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-30 20:12:25 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x116995b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10ad2868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x21486438)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xd677208)]: 0 failure(s)
2024-04-30 20:12:28 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x116995b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10ad2868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x21486438)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xd677208)]: 0 failure(s)
2024-04-30 20:12:30 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x116995b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10ad2868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x21486438)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xd677208)]: 0 failure(s)
2024-04-30 20:12:33 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x116995b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10ad2868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x21486438)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xd677208)]: 0 failure(s)
2024-04-30 20:12:35 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9389  0.9205  0.9179  0.9179  0.9179  0.9179  0.9179  0.9168  0.8692  0.8680  0.8680  0.8592  0.8592  0.8592  0.8592  0.8585
[17 : 32]:	0.8568  0.8567  0.8567  0.8527  0.8460  0.8441  0.8441  0.8437  0.8437  0.8437  0.8399  0.8357  0.8357  0.8318  0.8318  0.8308
[33 : 48]:	0.8308  0.8282  0.8250  0.8239  0.8235  0.8216  0.8216  0.8216  0.8208  0.8198  0.8198  0.8198  0.8198  0.8171  0.8171  0.8171
[49 : 64]:	0.8082  0.8048  0.8033  0.8033  0.8033  0.8022  0.8022  0.8015  0.8012  0.7970  0.7962  0.7962  0.7941  0.7941  0.7937  0.7936
2024-04-30 20:12:35 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 20:12:35 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #193: GFLOPs: 127.9365. Time: 16.4161 us. Best GFLOPs: 127.9365
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #194: GFLOPs: 135.8842. Time: 15.4560 us. Best GFLOPs: 135.8842
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #195: GFLOPs: 131.6866. Time: 15.9487 us. Best GFLOPs: 135.8842
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #196: GFLOPs: 106.9388. Time: 19.6395 us. Best GFLOPs: 135.8842
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #197: GFLOPs: 127.3858. Time: 16.4871 us. Best GFLOPs: 135.8842
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #198: GFLOPs: 139.7968. Time: 15.0234 us. Best GFLOPs: 139.7968
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #199: GFLOPs: 107.7238. Time: 19.4964 us. Best GFLOPs: 139.7968
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #200: GFLOPs: 133.6873. Time: 15.7100 us. Best GFLOPs: 139.7968
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #201: GFLOPs: 130.8867. Time: 16.0461 us. Best GFLOPs: 139.7968
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #202: GFLOPs: 128.9354. Time: 16.2890 us. Best GFLOPs: 139.7968
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #203: GFLOPs: 148.4753. Time: 14.1453 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #204: GFLOPs: 133.2435. Time: 15.7623 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #205: GFLOPs: 112.3277. Time: 18.6973 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #206: GFLOPs: 131.6625. Time: 15.9516 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #207: GFLOPs: 107.3094. Time: 19.5717 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #208: GFLOPs: 131.4591. Time: 15.9763 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #209: GFLOPs: 137.7974. Time: 15.2414 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #210: GFLOPs: 141.6477. Time: 14.8271 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #211: GFLOPs: 131.2379. Time: 16.0032 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #212: GFLOPs: 104.9890. Time: 20.0042 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #213: GFLOPs: 122.9017. Time: 17.0887 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #214: GFLOPs: 133.5493. Time: 15.7262 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #215: GFLOPs: 147.6654. Time: 14.2229 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #216: GFLOPs: 146.0306. Time: 14.3821 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #217: GFLOPs: 141.6877. Time: 14.8229 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #218: GFLOPs: 132.7505. Time: 15.8208 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #219: GFLOPs: 127.6268. Time: 16.4560 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #220: GFLOPs: 107.0565. Time: 19.6179 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #221: GFLOPs: 103.5851. Time: 20.2753 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #222: GFLOPs: 143.0840. Time: 14.6783 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #223: GFLOPs: 133.3725. Time: 15.7471 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #224: GFLOPs: 111.4819. Time: 18.8392 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #225: GFLOPs: 127.7768. Time: 16.4367 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #226: GFLOPs: 132.1251. Time: 15.8957 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #227: GFLOPs: 136.4643. Time: 15.3903 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #228: GFLOPs: 115.5452. Time: 18.1766 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #229: GFLOPs: 136.9001. Time: 15.3413 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #230: GFLOPs: 123.8902. Time: 16.9523 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #231: GFLOPs: 113.5409. Time: 18.4975 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #232: GFLOPs: 120.7894. Time: 17.3875 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #233: GFLOPs: 111.1677. Time: 18.8924 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #234: GFLOPs: 95.8958. Time: 21.9011 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #235: GFLOPs: 136.8632. Time: 15.3454 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #236: GFLOPs: 141.4629. Time: 14.8465 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #237: GFLOPs: 101.3981. Time: 20.7127 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #238: GFLOPs: 126.1196. Time: 16.6526 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #239: GFLOPs: 134.6614. Time: 15.5963 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #240: GFLOPs: 143.2586. Time: 14.6604 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #241: GFLOPs: 125.6417. Time: 16.7160 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #242: GFLOPs: 139.7668. Time: 15.0266 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #243: GFLOPs: 142.3016. Time: 14.7590 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #244: GFLOPs: 103.5618. Time: 20.2799 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #245: GFLOPs: 137.3114. Time: 15.2953 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #246: GFLOPs: 120.5087. Time: 17.4280 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #247: GFLOPs: 76.4351. Time: 27.4772 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #248: GFLOPs: 132.1478. Time: 15.8930 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #249: GFLOPs: 119.7450. Time: 17.5391 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #250: GFLOPs: 118.3434. Time: 17.7469 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #251: GFLOPs: 8.0242. Time: 261.7354 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #252: GFLOPs: 8.0983. Time: 259.3408 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #253: GFLOPs: 103.7689. Time: 20.2394 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #254: GFLOPs: 63.1120. Time: 33.2777 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #255: GFLOPs: 72.9214. Time: 28.8012 us. Best GFLOPs: 148.4753
2024-04-30 20:12:55 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_add_nn_relu_7] Trial #256: GFLOPs: 24.4326. Time: 85.9598 us. Best GFLOPs: 148.4753
