2024-04-30 19:06:05 [INFO] [task_scheduler.cc:160] Initializing Task #8: "fused_nn_pad"
2024-04-30 19:06:05 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(32), T.int64(32), T.int64(3)), "float32"), T_pad: T.Buffer((T.int64(1), T.int64(38), T.int64(38), T.int64(3)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        compile_engine_const = T.alloc_buffer((), "int32")
        T_cast = T.alloc_buffer(())
        with T.block("compile_engine_const"):
            vi = T.axis.spatial(1, T.int64(0))
            T.reads()
            T.writes(compile_engine_const[()])
            compile_engine_const[()] = 0
        with T.block("T_cast"):
            vi = T.axis.spatial(1, T.int64(0))
            T.reads(compile_engine_const[()])
            T.writes(T_cast[()])
            T_cast[()] = T.Cast("float32", compile_engine_const[()])
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(38), T.int64(38), T.int64(3)):
            with T.block("T_pad"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(p0[v_ax0, v_ax1 - T.int64(3), v_ax2 - T.int64(3), v_ax3], T_cast[()])
                T.writes(T_pad[v_ax0, v_ax1, v_ax2, v_ax3])
                T_pad[v_ax0, v_ax1, v_ax2, v_ax3] = T.if_then_else(T.int64(3) <= v_ax1 and v_ax1 < T.int64(35) and T.int64(3) <= v_ax2 and v_ax2 < T.int64(35), p0[v_ax0, v_ax1 - T.int64(3), v_ax2 - T.int64(3), v_ax3], T_cast[()])
2024-04-30 19:06:05 [INFO] [task_scheduler.cc:164] Total 1 design space(s) generated
2024-04-30 19:06:05 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(32), T.int64(32), T.int64(3)), "float32"), T_pad: T.Buffer((T.int64(1), T.int64(38), T.int64(38), T.int64(3)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 96, "meta_schedule.vectorize": 64})
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(38), T.int64(38), T.int64(3)):
                with T.block("T_pad"):
                    v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                    T.reads(p0[v_ax0, v_ax1 - T.int64(3), v_ax2 - T.int64(3), v_ax3])
                    T.writes(T_pad[v_ax0, v_ax1, v_ax2, v_ax3])
                    T_pad[v_ax0, v_ax1, v_ax2, v_ax3] = T.if_then_else(T.int64(3) <= v_ax1 and v_ax1 < T.int64(35) and T.int64(3) <= v_ax2 and v_ax2 < T.int64(35), p0[v_ax0, v_ax1 - T.int64(3), v_ax2 - T.int64(3), v_ax3], T.Cast("float32", 0))
b0 = sch.get_block(name="compile_engine_const", func_name="main")
b1 = sch.get_block(name="T_cast", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b0)
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
2024-04-30 19:13:53 [INFO] [task_scheduler.cc:160] Initializing Task #8: "fused_nn_pad"
2024-04-30 19:13:53 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(32), T.int64(32), T.int64(3)), "float32"), T_pad: T.Buffer((T.int64(1), T.int64(38), T.int64(38), T.int64(3)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        compile_engine_const = T.alloc_buffer((), "int32")
        T_cast = T.alloc_buffer(())
        with T.block("compile_engine_const"):
            vi = T.axis.spatial(1, T.int64(0))
            T.reads()
            T.writes(compile_engine_const[()])
            compile_engine_const[()] = 0
        with T.block("T_cast"):
            vi = T.axis.spatial(1, T.int64(0))
            T.reads(compile_engine_const[()])
            T.writes(T_cast[()])
            T_cast[()] = T.Cast("float32", compile_engine_const[()])
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(38), T.int64(38), T.int64(3)):
            with T.block("T_pad"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(p0[v_ax0, v_ax1 - T.int64(3), v_ax2 - T.int64(3), v_ax3], T_cast[()])
                T.writes(T_pad[v_ax0, v_ax1, v_ax2, v_ax3])
                T_pad[v_ax0, v_ax1, v_ax2, v_ax3] = T.if_then_else(T.int64(3) <= v_ax1 and v_ax1 < T.int64(35) and T.int64(3) <= v_ax2 and v_ax2 < T.int64(35), p0[v_ax0, v_ax1 - T.int64(3), v_ax2 - T.int64(3), v_ax3], T_cast[()])
2024-04-30 19:13:53 [INFO] [task_scheduler.cc:164] Total 1 design space(s) generated
2024-04-30 19:13:53 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(32), T.int64(32), T.int64(3)), "float32"), T_pad: T.Buffer((T.int64(1), T.int64(38), T.int64(38), T.int64(3)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 96, "meta_schedule.vectorize": 64})
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(38), T.int64(38), T.int64(3)):
                with T.block("T_pad"):
                    v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                    T.reads(p0[v_ax0, v_ax1 - T.int64(3), v_ax2 - T.int64(3), v_ax3])
                    T.writes(T_pad[v_ax0, v_ax1, v_ax2, v_ax3])
                    T_pad[v_ax0, v_ax1, v_ax2, v_ax3] = T.if_then_else(T.int64(3) <= v_ax1 and v_ax1 < T.int64(35) and T.int64(3) <= v_ax2 and v_ax2 < T.int64(35), p0[v_ax0, v_ax1 - T.int64(3), v_ax2 - T.int64(3), v_ax3], T.Cast("float32", 0))
b0 = sch.get_block(name="compile_engine_const", func_name="main")
b1 = sch.get_block(name="T_cast", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b0)
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=96)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
2024-04-30 19:18:49 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 19:18:49 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-30 19:18:49 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x2cffde28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x7fc14b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x166d2e68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x276930c8)]: 0 failure(s)
2024-04-30 19:18:49 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-30 19:18:49 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x2cffde28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x7fc14b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x166d2e68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x276930c8)]: 0 failure(s)
2024-04-30 19:18:49 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x2cffde28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x7fc14b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x166d2e68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x276930c8)]: 0 failure(s)
2024-04-30 19:18:50 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x2cffde28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x7fc14b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x166d2e68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x276930c8)]: 0 failure(s)
2024-04-30 19:18:50 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x2cffde28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x7fc14b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x166d2e68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x276930c8)]: 0 failure(s)
2024-04-30 19:18:50 [INFO] [evolutionary_search.cc:649] Scores of the best 2 candidates:
[1 : 2]:	0.7784  0.2808
2024-04-30 19:18:50 [INFO] [evolutionary_search.cc:727] Got 2 candidate(s) with evolutionary search
2024-04-30 19:18:50 [INFO] [evolutionary_search.cc:730] Sending 2 candidates(s) for measurement
2024-04-30 19:36:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_pad] Trial #1: GFLOPs: 0.0001. Time: 7.4350 us. Best GFLOPs: 0.0001
2024-04-30 19:36:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_pad] Trial #2: GFLOPs: 0.0002. Time: 6.4210 us. Best GFLOPs: 0.0002
